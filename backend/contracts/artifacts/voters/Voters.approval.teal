#pragma version 9

// This TEAL was generated by TEALScript v0.61.0
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implmented in the contract, its repsective branch will be "NOT_IMPLMENTED" which just contains "err"
txn ApplicationID
int 0
>
int 6
*
txn OnCompletion
+
switch create_NoOp create_OptIn NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED call_NoOp NOT_IMPLEMENTED call_CloseOut

NOT_IMPLEMENTED:
	err

// createApplication(uint64,uint64)void
//
// // vipVoters = BoxMap<Address, boolean>();
abi_route_createApplication:
	// vipVoteWeight: uint64
	txna ApplicationArgs 2
	btoi

	// algoToVoteRatio: uint64
	txna ApplicationArgs 1
	btoi

	// execute createApplication(uint64,uint64)void
	callsub createApplication
	int 1
	return

createApplication:
	proto 2 0

	// contracts/voters/voters.algo.ts:25
	// this.algoToVoteRation.value = algoToVoteRatio
	byte 0x616c676f546f566f7465526174696f6e // "algoToVoteRation"
	frame_dig -1 // algoToVoteRatio: uint64
	app_global_put

	// contracts/voters/voters.algo.ts:26
	// this.vipVoteWeight.value = vipVoteWeight
	byte 0x766970566f7465576569676874 // "vipVoteWeight"
	frame_dig -2 // vipVoteWeight: uint64
	app_global_put
	retsub

doAxfer:
	proto 3 0

	// contracts/voters/voters.algo.ts:30
	// sendAssetTransfer({
	//       assetReceiver: receiver,
	//       xferAsset: asset,
	//       assetAmount: amount,
	//     })
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// contracts/voters/voters.algo.ts:31
	// assetReceiver: receiver
	frame_dig -1 // receiver: account
	itxn_field AssetReceiver

	// contracts/voters/voters.algo.ts:32
	// xferAsset: asset
	frame_dig -2 // asset: asset
	itxn_field XferAsset

	// contracts/voters/voters.algo.ts:33
	// assetAmount: amount
	frame_dig -3 // amount: uint64
	itxn_field AssetAmount

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

doOptIn:
	proto 1 0

	// contracts/voters/voters.algo.ts:38
	// this.doAxfer(this.app.address, asset, 0)
	int 0
	frame_dig -1 // asset: asset
	global CurrentApplicationAddress
	callsub doAxfer
	retsub

// bootstrap(uint64)uint64
abi_route_bootstrap:
	byte 0x // push empty bytes to fill the stack frame for this subroutine's local variables

	// voteAsaTotal: uint64
	txna ApplicationArgs 1
	btoi

	// execute bootstrap(uint64)uint64
	callsub bootstrap
	int 1
	return

bootstrap:
	proto 2 0

	// contracts/voters/voters.algo.ts:42
	// verifyTxn(this.txn, { sender: this.app.creator })
	// verify sender
	txn Sender
	txna Applications 0
	app_params_get AppCreator
	assert
	==
	assert

	// contracts/voters/voters.algo.ts:43
	// assert(!this.votersAsaId.exists)
	txna Applications 0
	byte 0x766f746572734173614964 // "votersAsaId"
	app_global_get_ex
	swap
	pop
	!
	assert

	// contracts/voters/voters.algo.ts:44
	// votersAsa = sendAssetCreation({
	//       configAssetName: 'AlgoHub Vote',
	//       configAssetUnitName: 'AHV',
	//       configAssetDecimals: 18,
	//       configAssetTotal: voteAsaTotal,
	//       configAssetFreeze: this.app.address,
	//     })
	itxn_begin
	int acfg
	itxn_field TypeEnum

	// contracts/voters/voters.algo.ts:45
	// configAssetName: 'AlgoHub Vote'
	byte 0x416c676f48756220566f7465 // "AlgoHub Vote"
	itxn_field ConfigAssetName

	// contracts/voters/voters.algo.ts:46
	// configAssetUnitName: 'AHV'
	byte 0x414856 // "AHV"
	itxn_field ConfigAssetUnitName

	// contracts/voters/voters.algo.ts:47
	// configAssetDecimals: 18
	int 18
	itxn_field ConfigAssetDecimals

	// contracts/voters/voters.algo.ts:48
	// configAssetTotal: voteAsaTotal
	frame_dig -1 // voteAsaTotal: uint64
	itxn_field ConfigAssetTotal

	// contracts/voters/voters.algo.ts:49
	// configAssetFreeze: this.app.address
	global CurrentApplicationAddress
	itxn_field ConfigAssetFreeze

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	itxn CreatedAssetID
	frame_bury -2 // votersAsa: asset

	// contracts/voters/voters.algo.ts:51
	// this.votersAsaId.value = votersAsa
	byte 0x766f746572734173614964 // "votersAsaId"
	frame_dig -2 // votersAsa: asset
	app_global_put

	// contracts/voters/voters.algo.ts:52
	// this.doOptIn(votersAsa)
	frame_dig -2 // votersAsa: asset
	callsub doOptIn

	// contracts/voters/voters.algo.ts:53
	// return votersAsa;
	frame_dig -2 // votersAsa: asset
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

// register(asset)void
//
// // eslint-disable-next-line no-unused-vars
abi_route_register:
	// votersAsa: asset
	txna ApplicationArgs 1
	btoi
	txnas Assets

	// execute register(asset)void
	callsub register
	int 1
	return

register:
	proto 1 0

	// Verify a ASA hasn't already been opted into
	// contracts/voters/voters.algo.ts:61
	// assert(this.txn.sender.assetBalance(this.votersAsaId.value) === 0)
	txn Sender
	byte 0x766f746572734173614964 // "votersAsaId"
	app_global_get
	asset_holding_get AssetBalance
	assert
	int 0
	==
	assert

	// Verify that the balance is higher than the minimum algo to vote ratio
	// contracts/voters/voters.algo.ts:63
	// assert(this.txn.sender.balance >= this.algoToVoteRation.value)
	txn Sender
	acct_params_get AcctBalance
	assert
	byte 0x616c676f546f566f7465526174696f6e // "algoToVoteRation"
	app_global_get
	>=
	assert

	// contracts/voters/voters.algo.ts:65
	// sendAssetTransfer({
	//       xferAsset: this.votersAsaId.value,
	//       assetReceiver: this.txn.sender,
	//       assetAmount: 1,
	//     })
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// contracts/voters/voters.algo.ts:66
	// xferAsset: this.votersAsaId.value
	byte 0x766f746572734173614964 // "votersAsaId"
	app_global_get
	itxn_field XferAsset

	// contracts/voters/voters.algo.ts:67
	// assetReceiver: this.txn.sender
	txn Sender
	itxn_field AssetReceiver

	// contracts/voters/voters.algo.ts:68
	// assetAmount: 1
	int 1
	itxn_field AssetAmount

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// contracts/voters/voters.algo.ts:70
	// sendAssetFreeze({
	//       freezeAsset: this.votersAsaId.value,
	//       freezeAssetAccount: this.txn.sender,
	//       freezeAssetFrozen: true,
	//     })
	itxn_begin
	int afrz
	itxn_field TypeEnum

	// contracts/voters/voters.algo.ts:71
	// freezeAsset: this.votersAsaId.value
	byte 0x766f746572734173614964 // "votersAsaId"
	app_global_get
	itxn_field FreezeAsset

	// contracts/voters/voters.algo.ts:72
	// freezeAssetAccount: this.txn.sender
	txn Sender
	itxn_field FreezeAssetAccount

	// contracts/voters/voters.algo.ts:73
	// freezeAssetFrozen: true
	int 1
	itxn_field FreezeAssetFrozen

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// contracts/voters/voters.algo.ts:76
	// this.totalVotes.value = this.totalVotes.value + 1
	byte 0x746f74616c566f746573 // "totalVotes"
	byte 0x746f74616c566f746573 // "totalVotes"
	app_global_get
	int 1
	+
	app_global_put
	retsub

// closeOutOfApplication(asset)void
//
// // eslint-disable-next-line no-unused-vars
abi_route_closeOutOfApplication:
	// votersAsa: asset
	txna ApplicationArgs 1
	btoi
	txnas Assets

	// execute closeOutOfApplication(asset)void
	callsub closeOutOfApplication
	int 1
	return

closeOutOfApplication:
	proto 1 0

	// Verify a ASA has already been opted into
	// contracts/voters/voters.algo.ts:82
	// assert(this.txn.sender.assetBalance(this.votersAsaId.value) === 1)
	txn Sender
	byte 0x766f746572734173614964 // "votersAsaId"
	app_global_get
	asset_holding_get AssetBalance
	assert
	int 1
	==
	assert

	// contracts/voters/voters.algo.ts:84
	// sendAssetFreeze({
	//       freezeAsset: this.votersAsaId.value,
	//       freezeAssetAccount: this.txn.sender,
	//       freezeAssetFrozen: false,
	//     })
	itxn_begin
	int afrz
	itxn_field TypeEnum

	// contracts/voters/voters.algo.ts:85
	// freezeAsset: this.votersAsaId.value
	byte 0x766f746572734173614964 // "votersAsaId"
	app_global_get
	itxn_field FreezeAsset

	// contracts/voters/voters.algo.ts:86
	// freezeAssetAccount: this.txn.sender
	txn Sender
	itxn_field FreezeAssetAccount

	// contracts/voters/voters.algo.ts:87
	// freezeAssetFrozen: false
	int 0
	itxn_field FreezeAssetFrozen

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// contracts/voters/voters.algo.ts:90
	// sendAssetTransfer({
	//       xferAsset: this.votersAsaId.value,
	//       assetReceiver: this.app.address,
	//       assetAmount: 1,
	//     })
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// contracts/voters/voters.algo.ts:91
	// xferAsset: this.votersAsaId.value
	byte 0x766f746572734173614964 // "votersAsaId"
	app_global_get
	itxn_field XferAsset

	// contracts/voters/voters.algo.ts:92
	// assetReceiver: this.app.address
	global CurrentApplicationAddress
	itxn_field AssetReceiver

	// contracts/voters/voters.algo.ts:93
	// assetAmount: 1
	int 1
	itxn_field AssetAmount

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// contracts/voters/voters.algo.ts:96
	// this.totalVotes.value = this.totalVotes.value - 1
	byte 0x746f74616c566f746573 // "totalVotes"
	byte 0x746f74616c566f746573 // "totalVotes"
	app_global_get
	int 1
	-
	app_global_put
	retsub

// getVotersDetails()(uint64,uint64,uint64)
abi_route_getVotersDetails:
	// execute getVotersDetails()(uint64,uint64,uint64)
	callsub getVotersDetails
	int 1
	return

getVotersDetails:
	proto 0 0

	// contracts/voters/voters.algo.ts:100
	// return {
	//       algoToVoteRation: this.algoToVoteRation.value,
	//       vipVoteWeight: this.vipVoteWeight.value,
	//       totalVotes: this.totalVotes.value,
	//     };
	byte 0x616c676f546f566f7465526174696f6e // "algoToVoteRation"
	app_global_get
	itob
	byte 0x766970566f7465576569676874 // "vipVoteWeight"
	app_global_get
	itob
	concat
	byte 0x746f74616c566f746573 // "totalVotes"
	app_global_get
	itob
	concat
	byte 0x151f7c75
	swap
	concat
	log
	retsub

// getVotePower(asset,address)uint64
//
// // eslint-disable-next-line no-unused-vars
abi_route_getVotePower:
	// votersAsa: asset
	txna ApplicationArgs 2
	btoi
	txnas Assets

	// account: address
	txna ApplicationArgs 1
	dup
	len
	int 32
	==
	assert

	// execute getVotePower(asset,address)uint64
	callsub getVotePower
	int 1
	return

getVotePower:
	proto 2 0

	// if0_condition
	// contracts/voters/voters.algo.ts:112
	// this.vipVoters(account).value
	frame_dig -1 // account: address
	app_global_get
	int 0
	getbit
	bz if0_end

	// if0_consequent
	// contracts/voters/voters.algo.ts:112
	// return 125;
	byte 0x151f7c75000000000000007d
	log
	retsub

if0_end:
	// contracts/voters/voters.algo.ts:113
	// return 100;
	byte 0x151f7c750000000000000064
	log
	retsub

// getTotalVoters()uint64
abi_route_getTotalVoters:
	// execute getTotalVoters()uint64
	callsub getTotalVoters
	int 1
	return

getTotalVoters:
	proto 0 0

	// contracts/voters/voters.algo.ts:117
	// return this.totalVotes.value;
	byte 0x746f74616c566f746573 // "totalVotes"
	app_global_get
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

// getVIPStatus(address)bool
abi_route_getVIPStatus:
	// account: address
	txna ApplicationArgs 1
	dup
	len
	int 32
	==
	assert

	// execute getVIPStatus(address)bool
	callsub getVIPStatus
	int 1
	return

getVIPStatus:
	proto 1 0

	// contracts/voters/voters.algo.ts:121
	// return this.vipVoters(account).value;
	frame_dig -1 // account: address
	app_global_get
	int 0
	getbit
	byte 0x00
	int 0
	uncover 2
	setbit
	byte 0x151f7c75
	swap
	concat
	log
	retsub

// setVIPStatus(asset,bool,address)void
//
// // eslint-disable-next-line no-unused-vars
abi_route_setVIPStatus:
	// votersAsa: asset
	txna ApplicationArgs 3
	btoi
	txnas Assets

	// isVIP: bool
	txna ApplicationArgs 2
	dup
	len
	int 1
	==
	assert
	int 0
	getbit

	// account: address
	txna ApplicationArgs 1
	dup
	len
	int 32
	==
	assert

	// execute setVIPStatus(asset,bool,address)void
	callsub setVIPStatus
	int 1
	return

setVIPStatus:
	proto 3 0

	// Only allow app creator to set VIP status
	// contracts/voters/voters.algo.ts:127
	// verifyTxn(this.txn, { sender: globals.creatorAddress })
	// verify sender
	txn Sender
	global CreatorAddress
	==
	assert

	// contracts/voters/voters.algo.ts:130
	// this.vipVoters(account).value = isVIP
	frame_dig -1 // account: address
	frame_dig -2 // isVIP: bool
	byte 0x00
	int 0
	uncover 2
	setbit
	app_global_put
	retsub

create_NoOp:
	method "createApplication(uint64,uint64)void"
	txna ApplicationArgs 0
	match abi_route_createApplication
	err

call_NoOp:
	method "bootstrap(uint64)uint64"
	method "register(asset)void"
	method "getVotersDetails()(uint64,uint64,uint64)"
	method "getVotePower(address,asset)uint64"
	method "getTotalVoters()uint64"
	method "getVIPStatus(address)bool"
	method "setVIPStatus(address,bool,asset)void"
	txna ApplicationArgs 0
	match abi_route_bootstrap abi_route_register abi_route_getVotersDetails abi_route_getVotePower abi_route_getTotalVoters abi_route_getVIPStatus abi_route_setVIPStatus
	err

create_OptIn:
	method "createApplication(uint64,uint64)void"
	txna ApplicationArgs 0
	match abi_route_createApplication
	err

call_CloseOut:
	method "closeOutOfApplication(asset)void"
	txna ApplicationArgs 0
	match abi_route_closeOutOfApplication
	err
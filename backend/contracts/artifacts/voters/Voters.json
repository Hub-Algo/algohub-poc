{
  "hints": {
    "createApplication(uint64,uint64)void": {
      "call_config": {
        "no_op": "CREATE",
        "opt_in": "CREATE"
      }
    },
    "bootstrap(uint64)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "register(asset)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "closeOutOfApplication(asset)void": {
      "call_config": {
        "close_out": "CALL"
      }
    },
    "getVotersDetails()(uint64,uint64,uint64)": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getVotePower(address,asset)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getTotalVoters()uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getVIPStatus(address)bool": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "setVIPStatus(address,bool,asset)void": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "votersAsaId": {
          "type": "uint64",
          "key": "votersAsaId"
        },
        "algoToVoteRation": {
          "type": "uint64",
          "key": "algoToVoteRation"
        },
        "vipVoteWeight": {
          "type": "uint64",
          "key": "vipVoteWeight"
        },
        "totalVotes": {
          "type": "uint64",
          "key": "totalVotes"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 50,
      "num_uints": 4
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDkKCi8vIFRoaXMgVEVBTCB3YXMgZ2VuZXJhdGVkIGJ5IFRFQUxTY3JpcHQgdjAuNjEuMAovLyBodHRwczovL2dpdGh1Yi5jb20vYWxnb3JhbmRmb3VuZGF0aW9uL1RFQUxTY3JpcHQKCi8vIFRoaXMgY29udHJhY3QgaXMgY29tcGxpYW50IHdpdGggYW5kL29yIGltcGxlbWVudHMgdGhlIGZvbGxvd2luZyBBUkNzOiBbIEFSQzQgXQoKLy8gVGhlIGZvbGxvd2luZyB0ZW4gbGluZXMgb2YgVEVBTCBoYW5kbGUgaW5pdGlhbCBwcm9ncmFtIGZsb3cKLy8gVGhpcyBwYXR0ZXJuIGlzIHVzZWQgdG8gbWFrZSBpdCBlYXN5IGZvciBhbnlvbmUgdG8gcGFyc2UgdGhlIHN0YXJ0IG9mIHRoZSBwcm9ncmFtIGFuZCBkZXRlcm1pbmUgaWYgYSBzcGVjaWZpYyBhY3Rpb24gaXMgYWxsb3dlZAovLyBIZXJlLCBhY3Rpb24gcmVmZXJzIHRvIHRoZSBPbkNvbXBsZXRlIGluIGNvbWJpbmF0aW9uIHdpdGggd2hldGhlciB0aGUgYXBwIGlzIGJlaW5nIGNyZWF0ZWQgb3IgY2FsbGVkCi8vIEV2ZXJ5IHBvc3NpYmxlIGFjdGlvbiBmb3IgdGhpcyBjb250cmFjdCBpcyByZXByZXNlbnRlZCBpbiB0aGUgc3dpdGNoIHN0YXRlbWVudAovLyBJZiB0aGUgYWN0aW9uIGlzIG5vdCBpbXBsbWVudGVkIGluIHRoZSBjb250cmFjdCwgaXRzIHJlcHNlY3RpdmUgYnJhbmNoIHdpbGwgYmUgIk5PVF9JTVBMTUVOVEVEIiB3aGljaCBqdXN0IGNvbnRhaW5zICJlcnIiCnR4biBBcHBsaWNhdGlvbklECmludCAwCj4KaW50IDYKKgp0eG4gT25Db21wbGV0aW9uCisKc3dpdGNoIGNyZWF0ZV9Ob09wIGNyZWF0ZV9PcHRJbiBOT1RfSU1QTEVNRU5URUQgTk9UX0lNUExFTUVOVEVEIE5PVF9JTVBMRU1FTlRFRCBOT1RfSU1QTEVNRU5URUQgY2FsbF9Ob09wIE5PVF9JTVBMRU1FTlRFRCBjYWxsX0Nsb3NlT3V0CgpOT1RfSU1QTEVNRU5URUQ6CgllcnIKCi8vIGNyZWF0ZUFwcGxpY2F0aW9uKHVpbnQ2NCx1aW50NjQpdm9pZAovLwovLyAvLyB2aXBWb3RlcnMgPSBCb3hNYXA8QWRkcmVzcywgYm9vbGVhbj4oKTsKYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uOgoJLy8gdmlwVm90ZVdlaWdodDogdWludDY0Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAyCglidG9pCgoJLy8gYWxnb1RvVm90ZVJhdGlvOiB1aW50NjQKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWJ0b2kKCgkvLyBleGVjdXRlIGNyZWF0ZUFwcGxpY2F0aW9uKHVpbnQ2NCx1aW50NjQpdm9pZAoJY2FsbHN1YiBjcmVhdGVBcHBsaWNhdGlvbgoJaW50IDEKCXJldHVybgoKY3JlYXRlQXBwbGljYXRpb246Cglwcm90byAyIDAKCgkvLyBjb250cmFjdHMvdm90ZXJzL3ZvdGVycy5hbGdvLnRzOjI1CgkvLyB0aGlzLmFsZ29Ub1ZvdGVSYXRpb24udmFsdWUgPSBhbGdvVG9Wb3RlUmF0aW8KCWJ5dGUgMHg2MTZjNjc2ZjU0NmY1NjZmNzQ2NTUyNjE3NDY5NmY2ZSAvLyAiYWxnb1RvVm90ZVJhdGlvbiIKCWZyYW1lX2RpZyAtMSAvLyBhbGdvVG9Wb3RlUmF0aW86IHVpbnQ2NAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvdm90ZXJzL3ZvdGVycy5hbGdvLnRzOjI2CgkvLyB0aGlzLnZpcFZvdGVXZWlnaHQudmFsdWUgPSB2aXBWb3RlV2VpZ2h0CglieXRlIDB4NzY2OTcwNTY2Zjc0NjU1NzY1Njk2NzY4NzQgLy8gInZpcFZvdGVXZWlnaHQiCglmcmFtZV9kaWcgLTIgLy8gdmlwVm90ZVdlaWdodDogdWludDY0CglhcHBfZ2xvYmFsX3B1dAoJcmV0c3ViCgpkb0F4ZmVyOgoJcHJvdG8gMyAwCgoJLy8gY29udHJhY3RzL3ZvdGVycy92b3RlcnMuYWxnby50czozMAoJLy8gc2VuZEFzc2V0VHJhbnNmZXIoewoJLy8gICAgICAgYXNzZXRSZWNlaXZlcjogcmVjZWl2ZXIsCgkvLyAgICAgICB4ZmVyQXNzZXQ6IGFzc2V0LAoJLy8gICAgICAgYXNzZXRBbW91bnQ6IGFtb3VudCwKCS8vICAgICB9KQoJaXR4bl9iZWdpbgoJaW50IGF4ZmVyCglpdHhuX2ZpZWxkIFR5cGVFbnVtCgoJLy8gY29udHJhY3RzL3ZvdGVycy92b3RlcnMuYWxnby50czozMQoJLy8gYXNzZXRSZWNlaXZlcjogcmVjZWl2ZXIKCWZyYW1lX2RpZyAtMSAvLyByZWNlaXZlcjogYWNjb3VudAoJaXR4bl9maWVsZCBBc3NldFJlY2VpdmVyCgoJLy8gY29udHJhY3RzL3ZvdGVycy92b3RlcnMuYWxnby50czozMgoJLy8geGZlckFzc2V0OiBhc3NldAoJZnJhbWVfZGlnIC0yIC8vIGFzc2V0OiBhc3NldAoJaXR4bl9maWVsZCBYZmVyQXNzZXQKCgkvLyBjb250cmFjdHMvdm90ZXJzL3ZvdGVycy5hbGdvLnRzOjMzCgkvLyBhc3NldEFtb3VudDogYW1vdW50CglmcmFtZV9kaWcgLTMgLy8gYW1vdW50OiB1aW50NjQKCWl0eG5fZmllbGQgQXNzZXRBbW91bnQKCgkvLyBGZWUgZmllbGQgbm90IHNldCwgZGVmYXVsdGluZyB0byAwCglpbnQgMAoJaXR4bl9maWVsZCBGZWUKCgkvLyBTdWJtaXQgaW5uZXIgdHJhbnNhY3Rpb24KCWl0eG5fc3VibWl0CglyZXRzdWIKCmRvT3B0SW46Cglwcm90byAxIDAKCgkvLyBjb250cmFjdHMvdm90ZXJzL3ZvdGVycy5hbGdvLnRzOjM4CgkvLyB0aGlzLmRvQXhmZXIodGhpcy5hcHAuYWRkcmVzcywgYXNzZXQsIDApCglpbnQgMAoJZnJhbWVfZGlnIC0xIC8vIGFzc2V0OiBhc3NldAoJZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKCWNhbGxzdWIgZG9BeGZlcgoJcmV0c3ViCgovLyBib290c3RyYXAodWludDY0KXVpbnQ2NAphYmlfcm91dGVfYm9vdHN0cmFwOgoJYnl0ZSAweCAvLyBwdXNoIGVtcHR5IGJ5dGVzIHRvIGZpbGwgdGhlIHN0YWNrIGZyYW1lIGZvciB0aGlzIHN1YnJvdXRpbmUncyBsb2NhbCB2YXJpYWJsZXMKCgkvLyB2b3RlQXNhVG90YWw6IHVpbnQ2NAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJYnRvaQoKCS8vIGV4ZWN1dGUgYm9vdHN0cmFwKHVpbnQ2NCl1aW50NjQKCWNhbGxzdWIgYm9vdHN0cmFwCglpbnQgMQoJcmV0dXJuCgpib290c3RyYXA6Cglwcm90byAyIDAKCgkvLyBjb250cmFjdHMvdm90ZXJzL3ZvdGVycy5hbGdvLnRzOjQyCgkvLyB2ZXJpZnlUeG4odGhpcy50eG4sIHsgc2VuZGVyOiB0aGlzLmFwcC5jcmVhdG9yIH0pCgkvLyB2ZXJpZnkgc2VuZGVyCgl0eG4gU2VuZGVyCgl0eG5hIEFwcGxpY2F0aW9ucyAwCglhcHBfcGFyYW1zX2dldCBBcHBDcmVhdG9yCglhc3NlcnQKCT09Cglhc3NlcnQKCgkvLyBjb250cmFjdHMvdm90ZXJzL3ZvdGVycy5hbGdvLnRzOjQzCgkvLyBhc3NlcnQoIXRoaXMudm90ZXJzQXNhSWQuZXhpc3RzKQoJdHhuYSBBcHBsaWNhdGlvbnMgMAoJYnl0ZSAweDc2NmY3NDY1NzI3MzQxNzM2MTQ5NjQgLy8gInZvdGVyc0FzYUlkIgoJYXBwX2dsb2JhbF9nZXRfZXgKCXN3YXAKCXBvcAoJIQoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL3ZvdGVycy92b3RlcnMuYWxnby50czo0NAoJLy8gdm90ZXJzQXNhID0gc2VuZEFzc2V0Q3JlYXRpb24oewoJLy8gICAgICAgY29uZmlnQXNzZXROYW1lOiAnQWxnb0h1YiBWb3RlJywKCS8vICAgICAgIGNvbmZpZ0Fzc2V0VW5pdE5hbWU6ICdBSFYnLAoJLy8gICAgICAgY29uZmlnQXNzZXREZWNpbWFsczogMTgsCgkvLyAgICAgICBjb25maWdBc3NldFRvdGFsOiB2b3RlQXNhVG90YWwsCgkvLyAgICAgICBjb25maWdBc3NldEZyZWV6ZTogdGhpcy5hcHAuYWRkcmVzcywKCS8vICAgICB9KQoJaXR4bl9iZWdpbgoJaW50IGFjZmcKCWl0eG5fZmllbGQgVHlwZUVudW0KCgkvLyBjb250cmFjdHMvdm90ZXJzL3ZvdGVycy5hbGdvLnRzOjQ1CgkvLyBjb25maWdBc3NldE5hbWU6ICdBbGdvSHViIFZvdGUnCglieXRlIDB4NDE2YzY3NmY0ODc1NjIyMDU2NmY3NDY1IC8vICJBbGdvSHViIFZvdGUiCglpdHhuX2ZpZWxkIENvbmZpZ0Fzc2V0TmFtZQoKCS8vIGNvbnRyYWN0cy92b3RlcnMvdm90ZXJzLmFsZ28udHM6NDYKCS8vIGNvbmZpZ0Fzc2V0VW5pdE5hbWU6ICdBSFYnCglieXRlIDB4NDE0ODU2IC8vICJBSFYiCglpdHhuX2ZpZWxkIENvbmZpZ0Fzc2V0VW5pdE5hbWUKCgkvLyBjb250cmFjdHMvdm90ZXJzL3ZvdGVycy5hbGdvLnRzOjQ3CgkvLyBjb25maWdBc3NldERlY2ltYWxzOiAxOAoJaW50IDE4CglpdHhuX2ZpZWxkIENvbmZpZ0Fzc2V0RGVjaW1hbHMKCgkvLyBjb250cmFjdHMvdm90ZXJzL3ZvdGVycy5hbGdvLnRzOjQ4CgkvLyBjb25maWdBc3NldFRvdGFsOiB2b3RlQXNhVG90YWwKCWZyYW1lX2RpZyAtMSAvLyB2b3RlQXNhVG90YWw6IHVpbnQ2NAoJaXR4bl9maWVsZCBDb25maWdBc3NldFRvdGFsCgoJLy8gY29udHJhY3RzL3ZvdGVycy92b3RlcnMuYWxnby50czo0OQoJLy8gY29uZmlnQXNzZXRGcmVlemU6IHRoaXMuYXBwLmFkZHJlc3MKCWdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCglpdHhuX2ZpZWxkIENvbmZpZ0Fzc2V0RnJlZXplCgoJLy8gRmVlIGZpZWxkIG5vdCBzZXQsIGRlZmF1bHRpbmcgdG8gMAoJaW50IDAKCWl0eG5fZmllbGQgRmVlCgoJLy8gU3VibWl0IGlubmVyIHRyYW5zYWN0aW9uCglpdHhuX3N1Ym1pdAoJaXR4biBDcmVhdGVkQXNzZXRJRAoJZnJhbWVfYnVyeSAtMiAvLyB2b3RlcnNBc2E6IGFzc2V0CgoJLy8gY29udHJhY3RzL3ZvdGVycy92b3RlcnMuYWxnby50czo1MQoJLy8gdGhpcy52b3RlcnNBc2FJZC52YWx1ZSA9IHZvdGVyc0FzYQoJYnl0ZSAweDc2NmY3NDY1NzI3MzQxNzM2MTQ5NjQgLy8gInZvdGVyc0FzYUlkIgoJZnJhbWVfZGlnIC0yIC8vIHZvdGVyc0FzYTogYXNzZXQKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL3ZvdGVycy92b3RlcnMuYWxnby50czo1MgoJLy8gdGhpcy5kb09wdEluKHZvdGVyc0FzYSkKCWZyYW1lX2RpZyAtMiAvLyB2b3RlcnNBc2E6IGFzc2V0CgljYWxsc3ViIGRvT3B0SW4KCgkvLyBjb250cmFjdHMvdm90ZXJzL3ZvdGVycy5hbGdvLnRzOjUzCgkvLyByZXR1cm4gdm90ZXJzQXNhOwoJZnJhbWVfZGlnIC0yIC8vIHZvdGVyc0FzYTogYXNzZXQKCWl0b2IKCWJ5dGUgMHgxNTFmN2M3NQoJc3dhcAoJY29uY2F0Cglsb2cKCXJldHN1YgoKLy8gcmVnaXN0ZXIoYXNzZXQpdm9pZAovLwovLyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnMKYWJpX3JvdXRlX3JlZ2lzdGVyOgoJLy8gdm90ZXJzQXNhOiBhc3NldAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJYnRvaQoJdHhuYXMgQXNzZXRzCgoJLy8gZXhlY3V0ZSByZWdpc3Rlcihhc3NldCl2b2lkCgljYWxsc3ViIHJlZ2lzdGVyCglpbnQgMQoJcmV0dXJuCgpyZWdpc3RlcjoKCXByb3RvIDEgMAoKCS8vIFZlcmlmeSBhIEFTQSBoYXNuJ3QgYWxyZWFkeSBiZWVuIG9wdGVkIGludG8KCS8vIGNvbnRyYWN0cy92b3RlcnMvdm90ZXJzLmFsZ28udHM6NjEKCS8vIGFzc2VydCh0aGlzLnR4bi5zZW5kZXIuYXNzZXRCYWxhbmNlKHRoaXMudm90ZXJzQXNhSWQudmFsdWUpID09PSAwKQoJdHhuIFNlbmRlcgoJYnl0ZSAweDc2NmY3NDY1NzI3MzQxNzM2MTQ5NjQgLy8gInZvdGVyc0FzYUlkIgoJYXBwX2dsb2JhbF9nZXQKCWFzc2V0X2hvbGRpbmdfZ2V0IEFzc2V0QmFsYW5jZQoJYXNzZXJ0CglpbnQgMAoJPT0KCWFzc2VydAoKCS8vIFZlcmlmeSB0aGF0IHRoZSBiYWxhbmNlIGlzIGhpZ2hlciB0aGFuIHRoZSBtaW5pbXVtIGFsZ28gdG8gdm90ZSByYXRpbwoJLy8gY29udHJhY3RzL3ZvdGVycy92b3RlcnMuYWxnby50czo2MwoJLy8gYXNzZXJ0KHRoaXMudHhuLnNlbmRlci5iYWxhbmNlID49IHRoaXMuYWxnb1RvVm90ZVJhdGlvbi52YWx1ZSkKCXR4biBTZW5kZXIKCWFjY3RfcGFyYW1zX2dldCBBY2N0QmFsYW5jZQoJYXNzZXJ0CglieXRlIDB4NjE2YzY3NmY1NDZmNTY2Zjc0NjU1MjYxNzQ2OTZmNmUgLy8gImFsZ29Ub1ZvdGVSYXRpb24iCglhcHBfZ2xvYmFsX2dldAoJPj0KCWFzc2VydAoKCS8vIGNvbnRyYWN0cy92b3RlcnMvdm90ZXJzLmFsZ28udHM6NjUKCS8vIHNlbmRBc3NldFRyYW5zZmVyKHsKCS8vICAgICAgIHhmZXJBc3NldDogdGhpcy52b3RlcnNBc2FJZC52YWx1ZSwKCS8vICAgICAgIGFzc2V0UmVjZWl2ZXI6IHRoaXMudHhuLnNlbmRlciwKCS8vICAgICAgIGFzc2V0QW1vdW50OiAxLAoJLy8gICAgIH0pCglpdHhuX2JlZ2luCglpbnQgYXhmZXIKCWl0eG5fZmllbGQgVHlwZUVudW0KCgkvLyBjb250cmFjdHMvdm90ZXJzL3ZvdGVycy5hbGdvLnRzOjY2CgkvLyB4ZmVyQXNzZXQ6IHRoaXMudm90ZXJzQXNhSWQudmFsdWUKCWJ5dGUgMHg3NjZmNzQ2NTcyNzM0MTczNjE0OTY0IC8vICJ2b3RlcnNBc2FJZCIKCWFwcF9nbG9iYWxfZ2V0CglpdHhuX2ZpZWxkIFhmZXJBc3NldAoKCS8vIGNvbnRyYWN0cy92b3RlcnMvdm90ZXJzLmFsZ28udHM6NjcKCS8vIGFzc2V0UmVjZWl2ZXI6IHRoaXMudHhuLnNlbmRlcgoJdHhuIFNlbmRlcgoJaXR4bl9maWVsZCBBc3NldFJlY2VpdmVyCgoJLy8gY29udHJhY3RzL3ZvdGVycy92b3RlcnMuYWxnby50czo2OAoJLy8gYXNzZXRBbW91bnQ6IDEKCWludCAxCglpdHhuX2ZpZWxkIEFzc2V0QW1vdW50CgoJLy8gRmVlIGZpZWxkIG5vdCBzZXQsIGRlZmF1bHRpbmcgdG8gMAoJaW50IDAKCWl0eG5fZmllbGQgRmVlCgoJLy8gU3VibWl0IGlubmVyIHRyYW5zYWN0aW9uCglpdHhuX3N1Ym1pdAoKCS8vIGNvbnRyYWN0cy92b3RlcnMvdm90ZXJzLmFsZ28udHM6NzAKCS8vIHNlbmRBc3NldEZyZWV6ZSh7CgkvLyAgICAgICBmcmVlemVBc3NldDogdGhpcy52b3RlcnNBc2FJZC52YWx1ZSwKCS8vICAgICAgIGZyZWV6ZUFzc2V0QWNjb3VudDogdGhpcy50eG4uc2VuZGVyLAoJLy8gICAgICAgZnJlZXplQXNzZXRGcm96ZW46IHRydWUsCgkvLyAgICAgfSkKCWl0eG5fYmVnaW4KCWludCBhZnJ6CglpdHhuX2ZpZWxkIFR5cGVFbnVtCgoJLy8gY29udHJhY3RzL3ZvdGVycy92b3RlcnMuYWxnby50czo3MQoJLy8gZnJlZXplQXNzZXQ6IHRoaXMudm90ZXJzQXNhSWQudmFsdWUKCWJ5dGUgMHg3NjZmNzQ2NTcyNzM0MTczNjE0OTY0IC8vICJ2b3RlcnNBc2FJZCIKCWFwcF9nbG9iYWxfZ2V0CglpdHhuX2ZpZWxkIEZyZWV6ZUFzc2V0CgoJLy8gY29udHJhY3RzL3ZvdGVycy92b3RlcnMuYWxnby50czo3MgoJLy8gZnJlZXplQXNzZXRBY2NvdW50OiB0aGlzLnR4bi5zZW5kZXIKCXR4biBTZW5kZXIKCWl0eG5fZmllbGQgRnJlZXplQXNzZXRBY2NvdW50CgoJLy8gY29udHJhY3RzL3ZvdGVycy92b3RlcnMuYWxnby50czo3MwoJLy8gZnJlZXplQXNzZXRGcm96ZW46IHRydWUKCWludCAxCglpdHhuX2ZpZWxkIEZyZWV6ZUFzc2V0RnJvemVuCgoJLy8gRmVlIGZpZWxkIG5vdCBzZXQsIGRlZmF1bHRpbmcgdG8gMAoJaW50IDAKCWl0eG5fZmllbGQgRmVlCgoJLy8gU3VibWl0IGlubmVyIHRyYW5zYWN0aW9uCglpdHhuX3N1Ym1pdAoKCS8vIGNvbnRyYWN0cy92b3RlcnMvdm90ZXJzLmFsZ28udHM6NzYKCS8vIHRoaXMudG90YWxWb3Rlcy52YWx1ZSA9IHRoaXMudG90YWxWb3Rlcy52YWx1ZSArIDEKCWJ5dGUgMHg3NDZmNzQ2MTZjNTY2Zjc0NjU3MyAvLyAidG90YWxWb3RlcyIKCWJ5dGUgMHg3NDZmNzQ2MTZjNTY2Zjc0NjU3MyAvLyAidG90YWxWb3RlcyIKCWFwcF9nbG9iYWxfZ2V0CglpbnQgMQoJKwoJYXBwX2dsb2JhbF9wdXQKCXJldHN1YgoKLy8gY2xvc2VPdXRPZkFwcGxpY2F0aW9uKGFzc2V0KXZvaWQKLy8KLy8gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzCmFiaV9yb3V0ZV9jbG9zZU91dE9mQXBwbGljYXRpb246CgkvLyB2b3RlcnNBc2E6IGFzc2V0Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglidG9pCgl0eG5hcyBBc3NldHMKCgkvLyBleGVjdXRlIGNsb3NlT3V0T2ZBcHBsaWNhdGlvbihhc3NldCl2b2lkCgljYWxsc3ViIGNsb3NlT3V0T2ZBcHBsaWNhdGlvbgoJaW50IDEKCXJldHVybgoKY2xvc2VPdXRPZkFwcGxpY2F0aW9uOgoJcHJvdG8gMSAwCgoJLy8gVmVyaWZ5IGEgQVNBIGhhcyBhbHJlYWR5IGJlZW4gb3B0ZWQgaW50bwoJLy8gY29udHJhY3RzL3ZvdGVycy92b3RlcnMuYWxnby50czo4MgoJLy8gYXNzZXJ0KHRoaXMudHhuLnNlbmRlci5hc3NldEJhbGFuY2UodGhpcy52b3RlcnNBc2FJZC52YWx1ZSkgPT09IDEpCgl0eG4gU2VuZGVyCglieXRlIDB4NzY2Zjc0NjU3MjczNDE3MzYxNDk2NCAvLyAidm90ZXJzQXNhSWQiCglhcHBfZ2xvYmFsX2dldAoJYXNzZXRfaG9sZGluZ19nZXQgQXNzZXRCYWxhbmNlCglhc3NlcnQKCWludCAxCgk9PQoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL3ZvdGVycy92b3RlcnMuYWxnby50czo4NAoJLy8gc2VuZEFzc2V0RnJlZXplKHsKCS8vICAgICAgIGZyZWV6ZUFzc2V0OiB0aGlzLnZvdGVyc0FzYUlkLnZhbHVlLAoJLy8gICAgICAgZnJlZXplQXNzZXRBY2NvdW50OiB0aGlzLnR4bi5zZW5kZXIsCgkvLyAgICAgICBmcmVlemVBc3NldEZyb3plbjogZmFsc2UsCgkvLyAgICAgfSkKCWl0eG5fYmVnaW4KCWludCBhZnJ6CglpdHhuX2ZpZWxkIFR5cGVFbnVtCgoJLy8gY29udHJhY3RzL3ZvdGVycy92b3RlcnMuYWxnby50czo4NQoJLy8gZnJlZXplQXNzZXQ6IHRoaXMudm90ZXJzQXNhSWQudmFsdWUKCWJ5dGUgMHg3NjZmNzQ2NTcyNzM0MTczNjE0OTY0IC8vICJ2b3RlcnNBc2FJZCIKCWFwcF9nbG9iYWxfZ2V0CglpdHhuX2ZpZWxkIEZyZWV6ZUFzc2V0CgoJLy8gY29udHJhY3RzL3ZvdGVycy92b3RlcnMuYWxnby50czo4NgoJLy8gZnJlZXplQXNzZXRBY2NvdW50OiB0aGlzLnR4bi5zZW5kZXIKCXR4biBTZW5kZXIKCWl0eG5fZmllbGQgRnJlZXplQXNzZXRBY2NvdW50CgoJLy8gY29udHJhY3RzL3ZvdGVycy92b3RlcnMuYWxnby50czo4NwoJLy8gZnJlZXplQXNzZXRGcm96ZW46IGZhbHNlCglpbnQgMAoJaXR4bl9maWVsZCBGcmVlemVBc3NldEZyb3plbgoKCS8vIEZlZSBmaWVsZCBub3Qgc2V0LCBkZWZhdWx0aW5nIHRvIDAKCWludCAwCglpdHhuX2ZpZWxkIEZlZQoKCS8vIFN1Ym1pdCBpbm5lciB0cmFuc2FjdGlvbgoJaXR4bl9zdWJtaXQKCgkvLyBjb250cmFjdHMvdm90ZXJzL3ZvdGVycy5hbGdvLnRzOjkwCgkvLyBzZW5kQXNzZXRUcmFuc2Zlcih7CgkvLyAgICAgICB4ZmVyQXNzZXQ6IHRoaXMudm90ZXJzQXNhSWQudmFsdWUsCgkvLyAgICAgICBhc3NldFJlY2VpdmVyOiB0aGlzLmFwcC5hZGRyZXNzLAoJLy8gICAgICAgYXNzZXRBbW91bnQ6IDEsCgkvLyAgICAgfSkKCWl0eG5fYmVnaW4KCWludCBheGZlcgoJaXR4bl9maWVsZCBUeXBlRW51bQoKCS8vIGNvbnRyYWN0cy92b3RlcnMvdm90ZXJzLmFsZ28udHM6OTEKCS8vIHhmZXJBc3NldDogdGhpcy52b3RlcnNBc2FJZC52YWx1ZQoJYnl0ZSAweDc2NmY3NDY1NzI3MzQxNzM2MTQ5NjQgLy8gInZvdGVyc0FzYUlkIgoJYXBwX2dsb2JhbF9nZXQKCWl0eG5fZmllbGQgWGZlckFzc2V0CgoJLy8gY29udHJhY3RzL3ZvdGVycy92b3RlcnMuYWxnby50czo5MgoJLy8gYXNzZXRSZWNlaXZlcjogdGhpcy5hcHAuYWRkcmVzcwoJZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKCWl0eG5fZmllbGQgQXNzZXRSZWNlaXZlcgoKCS8vIGNvbnRyYWN0cy92b3RlcnMvdm90ZXJzLmFsZ28udHM6OTMKCS8vIGFzc2V0QW1vdW50OiAxCglpbnQgMQoJaXR4bl9maWVsZCBBc3NldEFtb3VudAoKCS8vIEZlZSBmaWVsZCBub3Qgc2V0LCBkZWZhdWx0aW5nIHRvIDAKCWludCAwCglpdHhuX2ZpZWxkIEZlZQoKCS8vIFN1Ym1pdCBpbm5lciB0cmFuc2FjdGlvbgoJaXR4bl9zdWJtaXQKCgkvLyBjb250cmFjdHMvdm90ZXJzL3ZvdGVycy5hbGdvLnRzOjk2CgkvLyB0aGlzLnRvdGFsVm90ZXMudmFsdWUgPSB0aGlzLnRvdGFsVm90ZXMudmFsdWUgLSAxCglieXRlIDB4NzQ2Zjc0NjE2YzU2NmY3NDY1NzMgLy8gInRvdGFsVm90ZXMiCglieXRlIDB4NzQ2Zjc0NjE2YzU2NmY3NDY1NzMgLy8gInRvdGFsVm90ZXMiCglhcHBfZ2xvYmFsX2dldAoJaW50IDEKCS0KCWFwcF9nbG9iYWxfcHV0CglyZXRzdWIKCi8vIGdldFZvdGVyc0RldGFpbHMoKSh1aW50NjQsdWludDY0LHVpbnQ2NCkKYWJpX3JvdXRlX2dldFZvdGVyc0RldGFpbHM6CgkvLyBleGVjdXRlIGdldFZvdGVyc0RldGFpbHMoKSh1aW50NjQsdWludDY0LHVpbnQ2NCkKCWNhbGxzdWIgZ2V0Vm90ZXJzRGV0YWlscwoJaW50IDEKCXJldHVybgoKZ2V0Vm90ZXJzRGV0YWlsczoKCXByb3RvIDAgMAoKCS8vIGNvbnRyYWN0cy92b3RlcnMvdm90ZXJzLmFsZ28udHM6MTAwCgkvLyByZXR1cm4gewoJLy8gICAgICAgYWxnb1RvVm90ZVJhdGlvbjogdGhpcy5hbGdvVG9Wb3RlUmF0aW9uLnZhbHVlLAoJLy8gICAgICAgdmlwVm90ZVdlaWdodDogdGhpcy52aXBWb3RlV2VpZ2h0LnZhbHVlLAoJLy8gICAgICAgdG90YWxWb3RlczogdGhpcy50b3RhbFZvdGVzLnZhbHVlLAoJLy8gICAgIH07CglieXRlIDB4NjE2YzY3NmY1NDZmNTY2Zjc0NjU1MjYxNzQ2OTZmNmUgLy8gImFsZ29Ub1ZvdGVSYXRpb24iCglhcHBfZ2xvYmFsX2dldAoJaXRvYgoJYnl0ZSAweDc2Njk3MDU2NmY3NDY1NTc2NTY5Njc2ODc0IC8vICJ2aXBWb3RlV2VpZ2h0IgoJYXBwX2dsb2JhbF9nZXQKCWl0b2IKCWNvbmNhdAoJYnl0ZSAweDc0NmY3NDYxNmM1NjZmNzQ2NTczIC8vICJ0b3RhbFZvdGVzIgoJYXBwX2dsb2JhbF9nZXQKCWl0b2IKCWNvbmNhdAoJYnl0ZSAweDE1MWY3Yzc1Cglzd2FwCgljb25jYXQKCWxvZwoJcmV0c3ViCgovLyBnZXRWb3RlUG93ZXIoYXNzZXQsYWRkcmVzcyl1aW50NjQKLy8KLy8gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzCmFiaV9yb3V0ZV9nZXRWb3RlUG93ZXI6CgkvLyB2b3RlcnNBc2E6IGFzc2V0Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAyCglidG9pCgl0eG5hcyBBc3NldHMKCgkvLyBhY2NvdW50OiBhZGRyZXNzCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglkdXAKCWxlbgoJaW50IDMyCgk9PQoJYXNzZXJ0CgoJLy8gZXhlY3V0ZSBnZXRWb3RlUG93ZXIoYXNzZXQsYWRkcmVzcyl1aW50NjQKCWNhbGxzdWIgZ2V0Vm90ZVBvd2VyCglpbnQgMQoJcmV0dXJuCgpnZXRWb3RlUG93ZXI6Cglwcm90byAyIDAKCgkvLyBpZjBfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvdm90ZXJzL3ZvdGVycy5hbGdvLnRzOjExMgoJLy8gdGhpcy52aXBWb3RlcnMoYWNjb3VudCkudmFsdWUKCWZyYW1lX2RpZyAtMSAvLyBhY2NvdW50OiBhZGRyZXNzCglhcHBfZ2xvYmFsX2dldAoJaW50IDAKCWdldGJpdAoJYnogaWYwX2VuZAoKCS8vIGlmMF9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvdm90ZXJzL3ZvdGVycy5hbGdvLnRzOjExMgoJLy8gcmV0dXJuIDEyNTsKCWJ5dGUgMHgxNTFmN2M3NTAwMDAwMDAwMDAwMDAwN2QKCWxvZwoJcmV0c3ViCgppZjBfZW5kOgoJLy8gY29udHJhY3RzL3ZvdGVycy92b3RlcnMuYWxnby50czoxMTMKCS8vIHJldHVybiAxMDA7CglieXRlIDB4MTUxZjdjNzUwMDAwMDAwMDAwMDAwMDY0Cglsb2cKCXJldHN1YgoKLy8gZ2V0VG90YWxWb3RlcnMoKXVpbnQ2NAphYmlfcm91dGVfZ2V0VG90YWxWb3RlcnM6CgkvLyBleGVjdXRlIGdldFRvdGFsVm90ZXJzKCl1aW50NjQKCWNhbGxzdWIgZ2V0VG90YWxWb3RlcnMKCWludCAxCglyZXR1cm4KCmdldFRvdGFsVm90ZXJzOgoJcHJvdG8gMCAwCgoJLy8gY29udHJhY3RzL3ZvdGVycy92b3RlcnMuYWxnby50czoxMTcKCS8vIHJldHVybiB0aGlzLnRvdGFsVm90ZXMudmFsdWU7CglieXRlIDB4NzQ2Zjc0NjE2YzU2NmY3NDY1NzMgLy8gInRvdGFsVm90ZXMiCglhcHBfZ2xvYmFsX2dldAoJaXRvYgoJYnl0ZSAweDE1MWY3Yzc1Cglzd2FwCgljb25jYXQKCWxvZwoJcmV0c3ViCgovLyBnZXRWSVBTdGF0dXMoYWRkcmVzcylib29sCmFiaV9yb3V0ZV9nZXRWSVBTdGF0dXM6CgkvLyBhY2NvdW50OiBhZGRyZXNzCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglkdXAKCWxlbgoJaW50IDMyCgk9PQoJYXNzZXJ0CgoJLy8gZXhlY3V0ZSBnZXRWSVBTdGF0dXMoYWRkcmVzcylib29sCgljYWxsc3ViIGdldFZJUFN0YXR1cwoJaW50IDEKCXJldHVybgoKZ2V0VklQU3RhdHVzOgoJcHJvdG8gMSAwCgoJLy8gY29udHJhY3RzL3ZvdGVycy92b3RlcnMuYWxnby50czoxMjEKCS8vIHJldHVybiB0aGlzLnZpcFZvdGVycyhhY2NvdW50KS52YWx1ZTsKCWZyYW1lX2RpZyAtMSAvLyBhY2NvdW50OiBhZGRyZXNzCglhcHBfZ2xvYmFsX2dldAoJaW50IDAKCWdldGJpdAoJYnl0ZSAweDAwCglpbnQgMAoJdW5jb3ZlciAyCglzZXRiaXQKCWJ5dGUgMHgxNTFmN2M3NQoJc3dhcAoJY29uY2F0Cglsb2cKCXJldHN1YgoKLy8gc2V0VklQU3RhdHVzKGFzc2V0LGJvb2wsYWRkcmVzcyl2b2lkCi8vCi8vIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFycwphYmlfcm91dGVfc2V0VklQU3RhdHVzOgoJLy8gdm90ZXJzQXNhOiBhc3NldAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMwoJYnRvaQoJdHhuYXMgQXNzZXRzCgoJLy8gaXNWSVA6IGJvb2wKCXR4bmEgQXBwbGljYXRpb25BcmdzIDIKCWR1cAoJbGVuCglpbnQgMQoJPT0KCWFzc2VydAoJaW50IDAKCWdldGJpdAoKCS8vIGFjY291bnQ6IGFkZHJlc3MKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWR1cAoJbGVuCglpbnQgMzIKCT09Cglhc3NlcnQKCgkvLyBleGVjdXRlIHNldFZJUFN0YXR1cyhhc3NldCxib29sLGFkZHJlc3Mpdm9pZAoJY2FsbHN1YiBzZXRWSVBTdGF0dXMKCWludCAxCglyZXR1cm4KCnNldFZJUFN0YXR1czoKCXByb3RvIDMgMAoKCS8vIE9ubHkgYWxsb3cgYXBwIGNyZWF0b3IgdG8gc2V0IFZJUCBzdGF0dXMKCS8vIGNvbnRyYWN0cy92b3RlcnMvdm90ZXJzLmFsZ28udHM6MTI3CgkvLyB2ZXJpZnlUeG4odGhpcy50eG4sIHsgc2VuZGVyOiBnbG9iYWxzLmNyZWF0b3JBZGRyZXNzIH0pCgkvLyB2ZXJpZnkgc2VuZGVyCgl0eG4gU2VuZGVyCglnbG9iYWwgQ3JlYXRvckFkZHJlc3MKCT09Cglhc3NlcnQKCgkvLyBjb250cmFjdHMvdm90ZXJzL3ZvdGVycy5hbGdvLnRzOjEzMAoJLy8gdGhpcy52aXBWb3RlcnMoYWNjb3VudCkudmFsdWUgPSBpc1ZJUAoJZnJhbWVfZGlnIC0xIC8vIGFjY291bnQ6IGFkZHJlc3MKCWZyYW1lX2RpZyAtMiAvLyBpc1ZJUDogYm9vbAoJYnl0ZSAweDAwCglpbnQgMAoJdW5jb3ZlciAyCglzZXRiaXQKCWFwcF9nbG9iYWxfcHV0CglyZXRzdWIKCmNyZWF0ZV9Ob09wOgoJbWV0aG9kICJjcmVhdGVBcHBsaWNhdGlvbih1aW50NjQsdWludDY0KXZvaWQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCBhYmlfcm91dGVfY3JlYXRlQXBwbGljYXRpb24KCWVycgoKY2FsbF9Ob09wOgoJbWV0aG9kICJib290c3RyYXAodWludDY0KXVpbnQ2NCIKCW1ldGhvZCAicmVnaXN0ZXIoYXNzZXQpdm9pZCIKCW1ldGhvZCAiZ2V0Vm90ZXJzRGV0YWlscygpKHVpbnQ2NCx1aW50NjQsdWludDY0KSIKCW1ldGhvZCAiZ2V0Vm90ZVBvd2VyKGFkZHJlc3MsYXNzZXQpdWludDY0IgoJbWV0aG9kICJnZXRUb3RhbFZvdGVycygpdWludDY0IgoJbWV0aG9kICJnZXRWSVBTdGF0dXMoYWRkcmVzcylib29sIgoJbWV0aG9kICJzZXRWSVBTdGF0dXMoYWRkcmVzcyxib29sLGFzc2V0KXZvaWQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCBhYmlfcm91dGVfYm9vdHN0cmFwIGFiaV9yb3V0ZV9yZWdpc3RlciBhYmlfcm91dGVfZ2V0Vm90ZXJzRGV0YWlscyBhYmlfcm91dGVfZ2V0Vm90ZVBvd2VyIGFiaV9yb3V0ZV9nZXRUb3RhbFZvdGVycyBhYmlfcm91dGVfZ2V0VklQU3RhdHVzIGFiaV9yb3V0ZV9zZXRWSVBTdGF0dXMKCWVycgoKY3JlYXRlX09wdEluOgoJbWV0aG9kICJjcmVhdGVBcHBsaWNhdGlvbih1aW50NjQsdWludDY0KXZvaWQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCBhYmlfcm91dGVfY3JlYXRlQXBwbGljYXRpb24KCWVycgoKY2FsbF9DbG9zZU91dDoKCW1ldGhvZCAiY2xvc2VPdXRPZkFwcGxpY2F0aW9uKGFzc2V0KXZvaWQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCBhYmlfcm91dGVfY2xvc2VPdXRPZkFwcGxpY2F0aW9uCgllcnI=",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDk="
  },
  "contract": {
    "name": "Voters",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "args": [
          {
            "name": "algoToVoteRatio",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "vipVoteWeight",
            "type": "uint64",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "bootstrap",
        "args": [
          {
            "name": "voteAsaTotal",
            "type": "uint64",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      },
      {
        "name": "register",
        "args": [
          {
            "name": "votersAsa",
            "type": "asset",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "closeOutOfApplication",
        "args": [
          {
            "name": "votersAsa",
            "type": "asset",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "getVotersDetails",
        "args": [],
        "desc": "",
        "returns": {
          "type": "(uint64,uint64,uint64)",
          "desc": ""
        }
      },
      {
        "name": "getVotePower",
        "args": [
          {
            "name": "account",
            "type": "address",
            "desc": ""
          },
          {
            "name": "votersAsa",
            "type": "asset",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      },
      {
        "name": "getTotalVoters",
        "args": [],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      },
      {
        "name": "getVIPStatus",
        "args": [
          {
            "name": "account",
            "type": "address",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "bool",
          "desc": ""
        }
      },
      {
        "name": "setVIPStatus",
        "args": [
          {
            "name": "account",
            "type": "address",
            "desc": ""
          },
          {
            "name": "isVIP",
            "type": "bool",
            "desc": ""
          },
          {
            "name": "votersAsa",
            "type": "asset",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      }
    ]
  }
}
#pragma version 9

// This TEAL was generated by TEALScript v0.61.0
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implmented in the contract, its repsective branch will be "NOT_IMPLMENTED" which just contains "err"
txn ApplicationID
int 0
>
int 6
*
txn OnCompletion
+
switch create_NoOp NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED call_NoOp

NOT_IMPLEMENTED:
	err

// createApplication(uint64,uint64,uint64)void
//
// // eslint-disable-next-line no-unused-vars
abi_route_createApplication:
	// votingPeriod: uint64
	txna ApplicationArgs 3
	btoi

	// vipVoteWeight: uint64
	txna ApplicationArgs 2
	btoi

	// algoToVoteRatio: uint64
	txna ApplicationArgs 1
	btoi

	// execute createApplication(uint64,uint64,uint64)void
	callsub createApplication
	int 1
	return

createApplication:
	proto 3 0

	// contracts/campaign/campaign.algo.ts:377
	// this.algoToVoteRation.value = algoToVoteRatio
	byte 0x616c676f546f566f7465526174696f6e // "algoToVoteRation"
	frame_dig -1 // algoToVoteRatio: uint64
	app_global_put

	// contracts/campaign/campaign.algo.ts:378
	// this.vipVoteWeight.value = vipVoteWeight
	byte 0x766970566f7465576569676874 // "vipVoteWeight"
	frame_dig -2 // vipVoteWeight: uint64
	app_global_put

	// contracts/campaign/campaign.algo.ts:379
	// this.votingPeriod.value = votingPeriod
	byte 0x766f74696e67506572696f64 // "votingPeriod"
	frame_dig -3 // votingPeriod: uint64
	app_global_put
	retsub

// ========================
// ==== Private Methods ===
// ========================
doAxfer:
	proto 3 0

	// contracts/campaign/campaign.algo.ts:386
	// sendAssetTransfer({
	//       assetReceiver: receiver,
	//       xferAsset: asset,
	//       assetAmount: amount,
	//     })
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// contracts/campaign/campaign.algo.ts:387
	// assetReceiver: receiver
	frame_dig -1 // receiver: account
	itxn_field AssetReceiver

	// contracts/campaign/campaign.algo.ts:388
	// xferAsset: asset
	frame_dig -2 // asset: asset
	itxn_field XferAsset

	// contracts/campaign/campaign.algo.ts:389
	// assetAmount: amount
	frame_dig -3 // amount: uint64
	itxn_field AssetAmount

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

doOptIn:
	proto 2 0

	// contracts/campaign/campaign.algo.ts:394
	// this.doAxfer(account, asset, 0)
	int 0
	frame_dig -2 // asset: asset
	frame_dig -1 // account: account
	callsub doAxfer
	retsub

// ========================
// ==== Admin Methods ====
// ========================
// bootstrap(uint64)uint64
//
// /// ========================
abi_route_bootstrap:
	byte 0x // push empty bytes to fill the stack frame for this subroutine's local variables

	// voteAsaTotal: uint64
	txna ApplicationArgs 1
	btoi

	// execute bootstrap(uint64)uint64
	callsub bootstrap
	int 1
	return

bootstrap:
	proto 2 0

	// contracts/campaign/campaign.algo.ts:401
	// verifyTxn(this.txn, { sender: this.app.creator })
	// verify sender
	txn Sender
	txna Applications 0
	app_params_get AppCreator
	assert
	==
	assert

	// contracts/campaign/campaign.algo.ts:402
	// assert(!this.votersAsaId.exists)
	txna Applications 0
	byte 0x766f746572734173614964 // "votersAsaId"
	app_global_get_ex
	swap
	pop
	!
	assert

	// contracts/campaign/campaign.algo.ts:403
	// votersAsa = sendAssetCreation({
	//       configAssetName: 'AlgoHubVote2',
	//       configAssetUnitName: 'AHV2',
	//       configAssetDecimals: 18,
	//       configAssetTotal: voteAsaTotal,
	//       configAssetFreeze: this.app.address,
	//       configAssetClawback: this.app.address,
	//       configAssetReserve: this.app.address,
	//     })
	itxn_begin
	int acfg
	itxn_field TypeEnum

	// contracts/campaign/campaign.algo.ts:404
	// configAssetName: 'AlgoHubVote2'
	byte 0x416c676f487562566f746532 // "AlgoHubVote2"
	itxn_field ConfigAssetName

	// contracts/campaign/campaign.algo.ts:405
	// configAssetUnitName: 'AHV2'
	byte 0x41485632 // "AHV2"
	itxn_field ConfigAssetUnitName

	// contracts/campaign/campaign.algo.ts:406
	// configAssetDecimals: 18
	int 18
	itxn_field ConfigAssetDecimals

	// contracts/campaign/campaign.algo.ts:407
	// configAssetTotal: voteAsaTotal
	frame_dig -1 // voteAsaTotal: uint64
	itxn_field ConfigAssetTotal

	// contracts/campaign/campaign.algo.ts:408
	// configAssetFreeze: this.app.address
	global CurrentApplicationAddress
	itxn_field ConfigAssetFreeze

	// contracts/campaign/campaign.algo.ts:409
	// configAssetClawback: this.app.address
	global CurrentApplicationAddress
	itxn_field ConfigAssetClawback

	// contracts/campaign/campaign.algo.ts:410
	// configAssetReserve: this.app.address
	global CurrentApplicationAddress
	itxn_field ConfigAssetReserve

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	itxn CreatedAssetID
	frame_bury -2 // votersAsa: asset

	// contracts/campaign/campaign.algo.ts:412
	// this.votersAsaId.value = votersAsa
	byte 0x766f746572734173614964 // "votersAsaId"
	frame_dig -2 // votersAsa: asset
	app_global_put

	// contracts/campaign/campaign.algo.ts:413
	// this.doOptIn(this.app.address, votersAsa)
	frame_dig -2 // votersAsa: asset
	global CurrentApplicationAddress
	callsub doOptIn

	// contracts/campaign/campaign.algo.ts:414
	// return votersAsa;
	frame_dig -2 // votersAsa: asset
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

// setVipStatus(asset,bool,account)void
//
// // eslint-disable-next-line no-unused-vars
abi_route_setVipStatus:
	// votersAsa: asset
	txna ApplicationArgs 3
	btoi
	txnas Assets

	// isVip: bool
	txna ApplicationArgs 2
	dup
	len
	int 1
	==
	assert
	int 0
	getbit

	// account: account
	txna ApplicationArgs 1
	btoi
	txnas Accounts

	// execute setVipStatus(asset,bool,account)void
	callsub setVipStatus
	int 1
	return

setVipStatus:
	proto 3 0

	// contracts/campaign/campaign.algo.ts:419
	// assert(this.votersAsaId.exists)
	txna Applications 0
	byte 0x766f746572734173614964 // "votersAsaId"
	app_global_get_ex
	swap
	pop
	assert

	// Only allow app creator to set Vip status
	// contracts/campaign/campaign.algo.ts:421
	// verifyTxn(this.txn, { sender: globals.creatorAddress })
	// verify sender
	txn Sender
	global CreatorAddress
	==
	assert

	// contracts/campaign/campaign.algo.ts:422
	// assert(account.assetBalance(this.votersAsaId.value) === 1)
	frame_dig -1 // account: account
	byte 0x766f746572734173614964 // "votersAsaId"
	app_global_get
	asset_holding_get AssetBalance
	assert
	int 1
	==
	assert

	// contracts/campaign/campaign.algo.ts:423
	// this.vipVoters(account).value = isVip
	frame_dig -1 // account: account
	frame_dig -2 // isVip: bool
	byte 0x00
	int 0
	uncover 2
	setbit
	box_put
	retsub

// ========================
// ==== Public Methods ====
// ========================
// createCampaign(uint64[],uint64[],string,uint64,uint64,uint64,uint64,uint64,asset,asset,asset)uint64
//
// // eslint-disable-next-line no-unused-vars
abi_route_createCampaign:
	byte 0x; dup // push empty bytes to fill the stack frame for this subroutine's local variables

	// vestingDurations: uint64[]
	txna ApplicationArgs 11
	extract 2 0

	// vestingPercentages: uint64[]
	txna ApplicationArgs 10
	extract 2 0

	// metadataUrl: string
	txna ApplicationArgs 9
	extract 2 0

	// duration: uint64
	txna ApplicationArgs 8
	btoi

	// maxTotalInvestment: uint64
	txna ApplicationArgs 7
	btoi

	// minTotalInvestment: uint64
	txna ApplicationArgs 6
	btoi

	// maxInvestmentPerAccount: uint64
	txna ApplicationArgs 5
	btoi

	// conversionRate: uint64
	txna ApplicationArgs 4
	btoi

	// investmentAsa: asset
	txna ApplicationArgs 3
	btoi
	txnas Assets

	// idoAsa: asset
	txna ApplicationArgs 2
	btoi
	txnas Assets

	// votersAsa: asset
	txna ApplicationArgs 1
	btoi
	txnas Assets

	// execute createCampaign(uint64[],uint64[],string,uint64,uint64,uint64,uint64,uint64,asset,asset,asset)uint64
	callsub createCampaign
	int 1
	return

createCampaign:
	proto 13 0

	// contracts/campaign/campaign.algo.ts:443
	// assert(this.votersAsaId.exists)
	txna Applications 0
	byte 0x766f746572734173614964 // "votersAsaId"
	app_global_get_ex
	swap
	pop
	assert

	// contracts/campaign/campaign.algo.ts:444
	// sendMethodCall<[Application], void>({
	//       name: 'createApplication',
	//       methodArgs: [this.app],
	//       clearStateProgram: Campaign.clearProgram(),
	//       approvalProgram: Campaign.approvalProgram(),
	//       globalNumByteSlice: 8,
	//       globalNumUint: 4,
	//     })
	itxn_begin
	int appl
	itxn_field TypeEnum
	method "createApplication(application)void"
	itxn_field ApplicationArgs

	// contracts/campaign/campaign.algo.ts:446
	// methodArgs: [this.app]
	txna Applications 0
	itxn_field Applications
	byte 0x0000000000000001
	itxn_field ApplicationArgs

	// contracts/campaign/campaign.algo.ts:447
	// clearStateProgram: Campaign.clearProgram()
	byte b64 CQ==
	itxn_field ClearStateProgram

	// contracts/campaign/campaign.algo.ts:448
	// approvalProgram: Campaign.approvalProgram()
	byte b64 CSAHAQAECApkBiYQCGNhbXBhaWduAWkAEmlzQXBwcm92ZWRDYW1wYWlnbgQVH3x1CGlkb0FzYUlkD2ludmVzdG1lbnRBc2FJZAFjC3ZvdGVyc0FzYUlkBWFkbWluAQAKdm90ZXNUb3RhbAx2b3Rlc0luRmF2b3IHYWxnb2h1YggAAAAAAAAAAA92ZXN0aW5nU2NoZWR1bGUxGCMNIQYLMRkIjQcFzQAAAAAAAAAAAAAF2wA2GgEXwDKIAAIiQ4oBACcNi/9nJwgjZycFI2cnBiNnKyMnCiNPAlRniYoAALEhBrIQgATRnz7eshonDWSyGCOyAbOJigABK2QjUxRBAAIiiStkI1OJigEBIomKAQCxJLIQMgqyFIv/shEjshIjsgGziYoCAYv+JwZkEkEADov/KGQ1ADQAVwAIFwqJi/4nBWQSQQAOi/8oZDUANABXAAgXC4kjiTYaC1cCADYaChc2GgkXNhoIFzYaBxc2GgYXNhoFFzYaBBfAMDYaAxfAMDYaAhfAMDYaARfAHIgAAiJDigsANjIAKGVMSBREJwmL/2cnCIv+ZycFi/1nJwaL/GeL/Yj/Vov8iP9RKCoqgAIAQov7FogFUov6IQSL/HEBRJQLFogFQ4v5IQSL/HEBRJQLFogFNIv4IQSL/HEBRJQLFogFJScOiAUgJw6IBRsyB4v3CBaIBRIyB4v3CIv2CBaIBQaL9UkVFlcGAkxQiAUGSFBniTYaAlcCADYaAVcCAIgAAiJDigIANjIAKGVMSBREi/4VJQqL/xUlChJEJw8qKoACAAyL/hUlChaIBLuL/0kVJQoWVwYCTFCIBLmL/kkVJQoWVwYCTFCIBKpIUGeJKjYaARfAMDEWIglJOBAkEkSIAAIiQ4oDADYyAChlTEhEMQAnCWQSRChkNQA0AFcYCBchBQsoZDUANABXAAgXCoz9i/84Eov9EkSL/zgUMgoSRIv/OAAxABJEi/84EScFZBJEiYgAAiJDigAANjIAKGVMSESI/f1EK2QjUxREKyInCiNPAlRniSo2GgIXNhoBF8AwMRYiCUk4ECQSRIgAAiJDigQANjIAKGVMSESI/cREKGQ1ADQAVzgIFzIHDUSL/SEEi/5xAUSUC4z8KGQ1ADQAVwgIF4v8D0QxAIj9pxRBAA4oZDUANABXMAgXMgcMRChkNQA0AFcYCBcoZDUANABXIAgXi/wID0QrZCNTFEEACSsiJwojTwJUZ4v/OBKL/BJEi/84FDIKEkSL/zgAMQASRIv/OBEnBmQSRChkNQA0AIEgKGQ1ADQAVyAIF4v8CBZdKExnKTEAUL1MSEEAEykxAFApMQBQvkQXi/wIFr9CAAgpMQBQi/wWv4kqRwM2GgEXwDCIAAIiQ4oFADYyAChlTEhEiPzcRCkxAFC9TEhEKTEAUL5EFyEFCyhkNQA0AFcACBcKjP4nBzEAUL1MSEEACycHMQBQvkQXQgABI4z9i/6L/Q1Ei/6L/QmM/Iv8jPuxJLIQMgqyADEAshQnBWSyEYv7shIjsgGzJwcxAFC9TEhBABUnBzEAUCcHMQBQvkQXi/sIFr9CAAknBzEAUIv7Fr+JNhoBF8AwiAACIkOKAQA2MgAoZUxIRCkxAFC9TEhEsSSyEDIKsgAxALIUJwZkshEpMQBQvkQXshIjsgGziSo2GgEXwDCIAAIiQ4oCADYyAChlTEhEMQAnCWQSRIj78UEARShkNQA0AFcYCBcoZDUANABXIAgXCYz+i/4jDUSxJLIQMgqyADEAshSL/7IRi/4hBQsoZDUANABXAAgXCrISI7IBs0IAHbEkshAyCrIAMQCyFIv/shEyCov/cABEshIjsgGziTYaARfAMIgAAiJDigEANjIAKGVMSEQxACcJZBJEsSSyEDIKsgAxALIUi/+yETIKi/9wAESyEiOyAbOJNhoCF8AwNhoBSRUiEkQjU4gAAiJDigIANjIAKGVMSEQoZDUANABXMAgXMgcNRDEAJwhkcABEIhJEJwsnC2QiCGeL/0EACCcMJwxkIghniTYaARfAHIgAAiJDigEAKYv/UL5EFxYnBExQsImIAAIiQ4oAACcMZBYnC2QWUCcETFCwiYgAAiJDigAAJwhkFicETFCwiYgAAiJDigAAJwVkFicETFCwiYgAAiJDigAAJwZkFicETFCwiYgAAiJDigAAKGQnBExQsImIAAIiQ4oAACcPZCcETFCwiYAE8cbw3DYaAI4B+icAgASHF2UTgAS2iCS2gASmIkiOgAQeXziSgASmIr3tgATZB6fqgAT1dO7ngATBu79VgAR34GkjgARAmMP2gATSJT9hgATB3zUBgAQup+6ZgASRvbFygATarDjsgAQxJps9gASucUe8NhoAjhH6PfsM+2j7zPvw/OT9jf3K/lH+jP7b/vf/Dv8g/zL/RP9UAIoEA4v8i/9Qi/2L/omKBAOL/Iv+UIz8i/9JFYv+FwgWVwYCjP6L/UxQjP2L/Iv9i/6J
	itxn_field ApprovalProgram

	// contracts/campaign/campaign.algo.ts:449
	// globalNumByteSlice: 8
	int 8
	itxn_field GlobalNumByteSlice

	// contracts/campaign/campaign.algo.ts:450
	// globalNumUint: 4
	int 4
	itxn_field GlobalNumUint

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// contracts/campaign/campaign.algo.ts:453
	// campaignApp = this.itxn.createdApplicationID
	itxn CreatedApplicationID
	frame_bury -12 // campaignApp: application

	// contracts/campaign/campaign.algo.ts:455
	// sendPayment({
	//       amount: 300_000,
	//       receiver: campaignApp.address,
	//     })
	itxn_begin
	int pay
	itxn_field TypeEnum

	// contracts/campaign/campaign.algo.ts:456
	// amount: 300_000
	int 300_000
	itxn_field Amount

	// contracts/campaign/campaign.algo.ts:457
	// receiver: campaignApp.address
	frame_dig -12 // campaignApp: application
	app_params_get AppAddress
	assert
	itxn_field Receiver

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// if0_condition
	// contracts/campaign/campaign.algo.ts:459
	// this.algohubCampaigns.exists
	txna Applications 0
	byte 0x616c676f68756243616d706169676e73 // "algohubCampaigns"
	app_global_get_ex
	swap
	pop
	bz if0_else

	// if0_consequent
	// contracts/campaign/campaign.algo.ts:460
	// this.algohubCampaigns.value.push(campaignApp)
	byte 0x616c676f68756243616d706169676e73 // "algohubCampaigns"
	app_global_get
	extract 2 0
	frame_dig -12 // campaignApp: application
	itob
	concat
	byte 0x616c676f68756243616d706169676e73 // "algohubCampaigns"
	swap
	dup
	len
	int 8
	/
	itob
	extract 6 2
	swap
	concat
	app_global_put
	b if0_end

if0_else:
	// contracts/campaign/campaign.algo.ts:462
	// newApp: Application[] = [campaignApp]
	frame_dig -12 // campaignApp: application
	itob
	frame_bury -13 // newApp: application[]

	// contracts/campaign/campaign.algo.ts:463
	// this.algohubCampaigns.value = newApp
	byte 0x616c676f68756243616d706169676e73 // "algohubCampaigns"
	frame_dig -13 // newApp: application[]
	dup
	len
	int 8
	/
	itob
	extract 6 2
	swap
	concat
	app_global_put

if0_end:
	// contracts/campaign/campaign.algo.ts:466
	// sendMethodCall<[number[], number[]], void>({
	//       applicationID: campaignApp,
	//       name: 'setVestingSchedule',
	//       methodArgs: [vestingPercentages, vestingDurations],
	//     })
	itxn_begin
	int appl
	itxn_field TypeEnum
	method "setVestingSchedule(uint64[],uint64[])void"
	itxn_field ApplicationArgs

	// contracts/campaign/campaign.algo.ts:467
	// applicationID: campaignApp
	frame_dig -12 // campaignApp: application
	itxn_field ApplicationID

	// contracts/campaign/campaign.algo.ts:469
	// methodArgs: [vestingPercentages, vestingDurations]
	frame_dig -10 // vestingPercentages: uint64[]
	dup
	len
	int 8
	/
	itob
	extract 6 2
	swap
	concat
	itxn_field ApplicationArgs
	frame_dig -11 // vestingDurations: uint64[]
	dup
	len
	int 8
	/
	itob
	extract 6 2
	swap
	concat
	itxn_field ApplicationArgs

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// contracts/campaign/campaign.algo.ts:472
	// sendMethodCall<[Account, Asset, Asset, Asset, number, number, number, number, number, number, string], void>({
	//       applicationID: campaignApp,
	//       name: 'createCampaign',
	//       methodArgs: [
	//         this.txn.sender,
	//         this.votersAsaId.value,
	//         idoAsa,
	//         investmentAsa,
	//         conversionRate,
	//         maxInvestmentPerAccount,
	//         minTotalInvestment,
	//         maxTotalInvestment,
	//         this.votingPeriod.value,
	//         duration,
	//         metadataUrl,
	//       ],
	//     })
	itxn_begin
	int appl
	itxn_field TypeEnum
	method "createCampaign(account,asset,asset,asset,uint64,uint64,uint64,uint64,uint64,uint64,string)void"
	itxn_field ApplicationArgs

	// contracts/campaign/campaign.algo.ts:473
	// applicationID: campaignApp
	frame_dig -12 // campaignApp: application
	itxn_field ApplicationID

	// contracts/campaign/campaign.algo.ts:475
	// methodArgs: [
	//         this.txn.sender,
	//         this.votersAsaId.value,
	//         idoAsa,
	//         investmentAsa,
	//         conversionRate,
	//         maxInvestmentPerAccount,
	//         minTotalInvestment,
	//         maxTotalInvestment,
	//         this.votingPeriod.value,
	//         duration,
	//         metadataUrl,
	//       ]
	txn Sender
	itxn_field Accounts
	byte 0x0000000000000001
	itxn_field ApplicationArgs
	byte 0x766f746572734173614964 // "votersAsaId"
	app_global_get
	itxn_field Assets
	byte 0x0000000000000000
	itxn_field ApplicationArgs
	frame_dig -2 // idoAsa: asset
	itxn_field Assets
	byte 0x0000000000000001
	itxn_field ApplicationArgs
	frame_dig -3 // investmentAsa: asset
	itxn_field Assets
	byte 0x0000000000000002
	itxn_field ApplicationArgs
	frame_dig -4 // conversionRate: uint64
	itob
	itxn_field ApplicationArgs
	frame_dig -5 // maxInvestmentPerAccount: uint64
	itob
	itxn_field ApplicationArgs
	frame_dig -6 // minTotalInvestment: uint64
	itob
	itxn_field ApplicationArgs
	frame_dig -7 // maxTotalInvestment: uint64
	itob
	itxn_field ApplicationArgs
	byte 0x766f74696e67506572696f64 // "votingPeriod"
	app_global_get
	itob
	itxn_field ApplicationArgs
	frame_dig -8 // duration: uint64
	itob
	itxn_field ApplicationArgs
	frame_dig -9 // metadataUrl: bytes
	dup
	len
	itob
	extract 6 2
	swap
	concat
	itxn_field ApplicationArgs

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// contracts/campaign/campaign.algo.ts:490
	// return campaignApp;
	frame_dig -12 // campaignApp: application
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

// registerAsVoter(asset)void
//
// // eslint-disable-next-line no-unused-vars
abi_route_registerAsVoter:
	// votersAsa: asset
	txna ApplicationArgs 1
	btoi
	txnas Assets

	// execute registerAsVoter(asset)void
	callsub registerAsVoter
	int 1
	return

registerAsVoter:
	proto 1 0

	// contracts/campaign/campaign.algo.ts:495
	// assert(this.votersAsaId.exists)
	txna Applications 0
	byte 0x766f746572734173614964 // "votersAsaId"
	app_global_get_ex
	swap
	pop
	assert

	// contracts/campaign/campaign.algo.ts:496
	// assert(this.txn.sender.assetBalance(this.votersAsaId.value) === 0)
	txn Sender
	byte 0x766f746572734173614964 // "votersAsaId"
	app_global_get
	asset_holding_get AssetBalance
	assert
	int 0
	==
	assert

	// contracts/campaign/campaign.algo.ts:497
	// assert(this.txn.sender.balance >= this.algoToVoteRation.value)
	txn Sender
	acct_params_get AcctBalance
	assert
	byte 0x616c676f546f566f7465526174696f6e // "algoToVoteRation"
	app_global_get
	>=
	assert

	// contracts/campaign/campaign.algo.ts:499
	// sendAssetTransfer({
	//       xferAsset: this.votersAsaId.value,
	//       assetReceiver: this.txn.sender,
	//       assetAmount: 1,
	//     })
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// contracts/campaign/campaign.algo.ts:500
	// xferAsset: this.votersAsaId.value
	byte 0x766f746572734173614964 // "votersAsaId"
	app_global_get
	itxn_field XferAsset

	// contracts/campaign/campaign.algo.ts:501
	// assetReceiver: this.txn.sender
	txn Sender
	itxn_field AssetReceiver

	// contracts/campaign/campaign.algo.ts:502
	// assetAmount: 1
	int 1
	itxn_field AssetAmount

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// contracts/campaign/campaign.algo.ts:505
	// sendAssetFreeze({
	//       freezeAsset: this.votersAsaId.value,
	//       freezeAssetAccount: this.txn.sender,
	//       freezeAssetFrozen: true,
	//     })
	itxn_begin
	int afrz
	itxn_field TypeEnum

	// contracts/campaign/campaign.algo.ts:506
	// freezeAsset: this.votersAsaId.value
	byte 0x766f746572734173614964 // "votersAsaId"
	app_global_get
	itxn_field FreezeAsset

	// contracts/campaign/campaign.algo.ts:507
	// freezeAssetAccount: this.txn.sender
	txn Sender
	itxn_field FreezeAssetAccount

	// contracts/campaign/campaign.algo.ts:508
	// freezeAssetFrozen: true
	int 1
	itxn_field FreezeAssetFrozen

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// contracts/campaign/campaign.algo.ts:511
	// this.totalVotes.value = this.totalVotes.value + 1
	byte 0x746f74616c566f746573 // "totalVotes"
	byte 0x746f74616c566f746573 // "totalVotes"
	app_global_get
	int 1
	+
	app_global_put
	retsub

// unregisterAsVoter(asset)void
//
// // eslint-disable-next-line no-unused-vars
abi_route_unregisterAsVoter:
	// votersAsa: asset
	txna ApplicationArgs 1
	btoi
	txnas Assets

	// execute unregisterAsVoter(asset)void
	callsub unregisterAsVoter
	int 1
	return

unregisterAsVoter:
	proto 1 0

	// contracts/campaign/campaign.algo.ts:516
	// assert(this.votersAsaId.exists)
	txna Applications 0
	byte 0x766f746572734173614964 // "votersAsaId"
	app_global_get_ex
	swap
	pop
	assert

	// contracts/campaign/campaign.algo.ts:517
	// assert(this.txn.sender.hasAsset(this.votersAsaId.value) === 1)
	txn Sender
	byte 0x766f746572734173614964 // "votersAsaId"
	app_global_get
	asset_holding_get AssetBalance
	swap
	pop
	int 1
	==
	assert

	// contracts/campaign/campaign.algo.ts:519
	// sendAssetFreeze({
	//       freezeAsset: this.votersAsaId.value,
	//       freezeAssetAccount: this.txn.sender,
	//       freezeAssetFrozen: false,
	//     })
	itxn_begin
	int afrz
	itxn_field TypeEnum

	// contracts/campaign/campaign.algo.ts:520
	// freezeAsset: this.votersAsaId.value
	byte 0x766f746572734173614964 // "votersAsaId"
	app_global_get
	itxn_field FreezeAsset

	// contracts/campaign/campaign.algo.ts:521
	// freezeAssetAccount: this.txn.sender
	txn Sender
	itxn_field FreezeAssetAccount

	// contracts/campaign/campaign.algo.ts:522
	// freezeAssetFrozen: false
	int 0
	itxn_field FreezeAssetFrozen

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// contracts/campaign/campaign.algo.ts:525
	// sendAssetTransfer({
	//       assetSender: this.txn.sender,
	//       xferAsset: this.votersAsaId.value,
	//       assetReceiver: this.app.address,
	//       assetAmount: 1,
	//     })
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// contracts/campaign/campaign.algo.ts:526
	// assetSender: this.txn.sender
	txn Sender
	itxn_field AssetSender

	// contracts/campaign/campaign.algo.ts:527
	// xferAsset: this.votersAsaId.value
	byte 0x766f746572734173614964 // "votersAsaId"
	app_global_get
	itxn_field XferAsset

	// contracts/campaign/campaign.algo.ts:528
	// assetReceiver: this.app.address
	global CurrentApplicationAddress
	itxn_field AssetReceiver

	// contracts/campaign/campaign.algo.ts:529
	// assetAmount: 1
	int 1
	itxn_field AssetAmount

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// contracts/campaign/campaign.algo.ts:532
	// this.totalVotes.value = this.totalVotes.value - 1
	byte 0x746f74616c566f746573 // "totalVotes"
	byte 0x746f74616c566f746573 // "totalVotes"
	app_global_get
	int 1
	-
	app_global_put

	// contracts/campaign/campaign.algo.ts:533
	// this.vipVoters(this.txn.sender).value = false
	txn Sender
	int 0
	byte 0x00
	int 0
	uncover 2
	setbit
	box_put
	retsub

// expandOpcodeBudget()void
abi_route_expandOpcodeBudget:
	// execute expandOpcodeBudget()void
	callsub expandOpcodeBudget
	int 1
	return

expandOpcodeBudget:
	proto 0 0
	retsub

// ========================
// ==== Getter Methods ====
// ========================
// getAllCampaignApps()application[]
//
// /// ========================
abi_route_getAllCampaignApps:
	// execute getAllCampaignApps()application[]
	callsub getAllCampaignApps
	int 1
	return

getAllCampaignApps:
	proto 0 0

	// contracts/campaign/campaign.algo.ts:542
	// return this.algohubCampaigns.exists ? this.algohubCampaigns.value : [];
	txna Applications 0
	byte 0x616c676f68756243616d706169676e73 // "algohubCampaigns"
	app_global_get_ex
	swap
	pop
	bz ternary0_false
	byte 0x616c676f68756243616d706169676e73 // "algohubCampaigns"
	app_global_get
	extract 2 0
	b ternary0_end

ternary0_false:
	byte 0x

ternary0_end:
	dup
	len
	int 8
	/
	itob
	extract 6 2
	swap
	concat
	byte 0x151f7c75
	swap
	concat
	log
	retsub

// getVotersDetails()(uint64,uint64,uint64)
abi_route_getVotersDetails:
	// execute getVotersDetails()(uint64,uint64,uint64)
	callsub getVotersDetails
	int 1
	return

getVotersDetails:
	proto 0 0

	// contracts/campaign/campaign.algo.ts:546
	// return {
	//       algoToVoteRation: this.algoToVoteRation.value,
	//       vipVoteWeight: this.vipVoteWeight.value,
	//       totalVotes: this.totalVotes.value,
	//     };
	byte 0x616c676f546f566f7465526174696f6e // "algoToVoteRation"
	app_global_get
	itob
	byte 0x766970566f7465576569676874 // "vipVoteWeight"
	app_global_get
	itob
	concat
	byte 0x746f74616c566f746573 // "totalVotes"
	app_global_get
	itob
	concat
	byte 0x151f7c75
	swap
	concat
	log
	retsub

// getVotePower(asset,account)uint64
//
// // eslint-disable-next-line no-unused-vars
abi_route_getVotePower:
	// votersAsa: asset
	txna ApplicationArgs 2
	btoi
	txnas Assets

	// account: account
	txna ApplicationArgs 1
	btoi
	txnas Accounts

	// execute getVotePower(asset,account)uint64
	callsub getVotePower
	int 1
	return

getVotePower:
	proto 2 0

	// if1_condition
	// contracts/campaign/campaign.algo.ts:555
	// account.hasAsset(this.votersAsaId.value) === 0
	frame_dig -1 // account: account
	byte 0x766f746572734173614964 // "votersAsaId"
	app_global_get
	asset_holding_get AssetBalance
	swap
	pop
	int 0
	==
	bz if1_end

	// if1_consequent
	// contracts/campaign/campaign.algo.ts:555
	// return 0;
	byte 0x151f7c750000000000000000
	log
	retsub

if1_end:
	// if2_condition
	// contracts/campaign/campaign.algo.ts:556
	// this.vipVoters(account).exists
	frame_dig -1 // account: account
	box_len
	swap
	pop
	bz if2_end

	// if2_consequent
	// if3_condition
	// contracts/campaign/campaign.algo.ts:557
	// this.vipVoters(account).value
	frame_dig -1 // account: account
	box_get
	assert
	int 0
	getbit
	bz if3_end

	// if3_consequent
	// contracts/campaign/campaign.algo.ts:557
	// return this.vipVoteWeight.value;
	byte 0x766970566f7465576569676874 // "vipVoteWeight"
	app_global_get
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

if3_end:

if2_end:
	// contracts/campaign/campaign.algo.ts:559
	// return 100;
	byte 0x151f7c750000000000000064
	log
	retsub

// getVotingPeriod()uint64
abi_route_getVotingPeriod:
	// execute getVotingPeriod()uint64
	callsub getVotingPeriod
	int 1
	return

getVotingPeriod:
	proto 0 0

	// contracts/campaign/campaign.algo.ts:563
	// return this.votingPeriod.value;
	byte 0x766f74696e67506572696f64 // "votingPeriod"
	app_global_get
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

// getTotalVoters()uint64
abi_route_getTotalVoters:
	// execute getTotalVoters()uint64
	callsub getTotalVoters
	int 1
	return

getTotalVoters:
	proto 0 0

	// contracts/campaign/campaign.algo.ts:567
	// return this.totalVotes.value;
	byte 0x746f74616c566f746573 // "totalVotes"
	app_global_get
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

// getVipStatus(account)bool
abi_route_getVipStatus:
	// account: account
	txna ApplicationArgs 1
	btoi
	txnas Accounts

	// execute getVipStatus(account)bool
	callsub getVipStatus
	int 1
	return

getVipStatus:
	proto 1 0

	// if4_condition
	// contracts/campaign/campaign.algo.ts:571
	// this.vipVoters(account).exists
	frame_dig -1 // account: account
	box_len
	swap
	pop
	bz if4_end

	// if4_consequent
	// contracts/campaign/campaign.algo.ts:572
	// return this.vipVoters(account).value;
	frame_dig -1 // account: account
	box_get
	assert
	int 0
	getbit
	byte 0x00
	int 0
	uncover 2
	setbit
	byte 0x151f7c75
	swap
	concat
	log
	retsub

if4_end:
	// contracts/campaign/campaign.algo.ts:574
	// return false;
	int 0
	byte 0x00
	int 0
	uncover 2
	setbit
	byte 0x151f7c75
	swap
	concat
	log
	retsub

// getVoteAsa(asset)uint64
//
// // eslint-disable-next-line no-unused-vars
abi_route_getVoteAsa:
	// voteAsa: asset
	txna ApplicationArgs 1
	btoi
	txnas Assets

	// execute getVoteAsa(asset)uint64
	callsub getVoteAsa
	int 1
	return

getVoteAsa:
	proto 1 0

	// contracts/campaign/campaign.algo.ts:579
	// return this.votersAsaId.value;
	byte 0x766f746572734173614964 // "votersAsaId"
	app_global_get
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

create_NoOp:
	method "createApplication(uint64,uint64,uint64)void"
	txna ApplicationArgs 0
	match abi_route_createApplication
	err

call_NoOp:
	method "bootstrap(uint64)uint64"
	method "setVipStatus(account,bool,asset)void"
	method "createCampaign(asset,asset,asset,uint64,uint64,uint64,uint64,uint64,string,uint64[],uint64[])uint64"
	method "registerAsVoter(asset)void"
	method "unregisterAsVoter(asset)void"
	method "expandOpcodeBudget()void"
	method "getAllCampaignApps()uint64[]"
	method "getVotersDetails()(uint64,uint64,uint64)"
	method "getVotePower(account,asset)uint64"
	method "getVotingPeriod()uint64"
	method "getTotalVoters()uint64"
	method "getVipStatus(account)bool"
	method "getVoteAsa(asset)uint64"
	txna ApplicationArgs 0
	match abi_route_bootstrap abi_route_setVipStatus abi_route_createCampaign abi_route_registerAsVoter abi_route_unregisterAsVoter abi_route_expandOpcodeBudget abi_route_getAllCampaignApps abi_route_getVotersDetails abi_route_getVotePower abi_route_getVotingPeriod abi_route_getTotalVoters abi_route_getVipStatus abi_route_getVoteAsa
	err
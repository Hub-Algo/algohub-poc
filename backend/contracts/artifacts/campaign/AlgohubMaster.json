{
  "hints": {
    "createApplication(uint64,uint64,uint64)void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "bootstrap(uint64)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "setVipStatus(account,bool,asset)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "createCampaign(asset,account,asset,asset,uint64,uint64,uint64,uint64,uint64,string)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "registerAsVoter(asset)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "unregisterAsVoter(asset)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getAllCampaignApps()uint64[]": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getVotersDetails()(uint64,uint64,uint64)": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getVotePower(account,asset)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getVotingPeriod()uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getTotalVoters()uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getVipStatus(account)bool": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "algohubCampaigns": {
          "type": "bytes",
          "key": "algohubCampaigns"
        },
        "votersAsaId": {
          "type": "uint64",
          "key": "votersAsaId"
        },
        "algoToVoteRation": {
          "type": "uint64",
          "key": "algoToVoteRation"
        },
        "votingPeriod": {
          "type": "uint64",
          "key": "votingPeriod"
        },
        "vipVoteWeight": {
          "type": "uint64",
          "key": "vipVoteWeight"
        },
        "totalVotes": {
          "type": "uint64",
          "key": "totalVotes"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 51,
      "num_uints": 5
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDkKCi8vIFRoaXMgVEVBTCB3YXMgZ2VuZXJhdGVkIGJ5IFRFQUxTY3JpcHQgdjAuNjEuMAovLyBodHRwczovL2dpdGh1Yi5jb20vYWxnb3JhbmRmb3VuZGF0aW9uL1RFQUxTY3JpcHQKCi8vIFRoaXMgY29udHJhY3QgaXMgY29tcGxpYW50IHdpdGggYW5kL29yIGltcGxlbWVudHMgdGhlIGZvbGxvd2luZyBBUkNzOiBbIEFSQzQgXQoKLy8gVGhlIGZvbGxvd2luZyB0ZW4gbGluZXMgb2YgVEVBTCBoYW5kbGUgaW5pdGlhbCBwcm9ncmFtIGZsb3cKLy8gVGhpcyBwYXR0ZXJuIGlzIHVzZWQgdG8gbWFrZSBpdCBlYXN5IGZvciBhbnlvbmUgdG8gcGFyc2UgdGhlIHN0YXJ0IG9mIHRoZSBwcm9ncmFtIGFuZCBkZXRlcm1pbmUgaWYgYSBzcGVjaWZpYyBhY3Rpb24gaXMgYWxsb3dlZAovLyBIZXJlLCBhY3Rpb24gcmVmZXJzIHRvIHRoZSBPbkNvbXBsZXRlIGluIGNvbWJpbmF0aW9uIHdpdGggd2hldGhlciB0aGUgYXBwIGlzIGJlaW5nIGNyZWF0ZWQgb3IgY2FsbGVkCi8vIEV2ZXJ5IHBvc3NpYmxlIGFjdGlvbiBmb3IgdGhpcyBjb250cmFjdCBpcyByZXByZXNlbnRlZCBpbiB0aGUgc3dpdGNoIHN0YXRlbWVudAovLyBJZiB0aGUgYWN0aW9uIGlzIG5vdCBpbXBsbWVudGVkIGluIHRoZSBjb250cmFjdCwgaXRzIHJlcHNlY3RpdmUgYnJhbmNoIHdpbGwgYmUgIk5PVF9JTVBMTUVOVEVEIiB3aGljaCBqdXN0IGNvbnRhaW5zICJlcnIiCnR4biBBcHBsaWNhdGlvbklECmludCAwCj4KaW50IDYKKgp0eG4gT25Db21wbGV0aW9uCisKc3dpdGNoIGNyZWF0ZV9Ob09wIE5PVF9JTVBMRU1FTlRFRCBOT1RfSU1QTEVNRU5URUQgTk9UX0lNUExFTUVOVEVEIE5PVF9JTVBMRU1FTlRFRCBOT1RfSU1QTEVNRU5URUQgY2FsbF9Ob09wCgpOT1RfSU1QTEVNRU5URUQ6CgllcnIKCi8vIGNyZWF0ZUFwcGxpY2F0aW9uKHVpbnQ2NCx1aW50NjQsdWludDY0KXZvaWQKLy8KLy8gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzCmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbjoKCS8vIHZvdGluZ1BlcmlvZDogdWludDY0Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAzCglidG9pCgoJLy8gdmlwVm90ZVdlaWdodDogdWludDY0Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAyCglidG9pCgoJLy8gYWxnb1RvVm90ZVJhdGlvOiB1aW50NjQKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWJ0b2kKCgkvLyBleGVjdXRlIGNyZWF0ZUFwcGxpY2F0aW9uKHVpbnQ2NCx1aW50NjQsdWludDY0KXZvaWQKCWNhbGxzdWIgY3JlYXRlQXBwbGljYXRpb24KCWludCAxCglyZXR1cm4KCmNyZWF0ZUFwcGxpY2F0aW9uOgoJcHJvdG8gMyAwCgoJLy8gY29udHJhY3RzL2NhbXBhaWduL2NhbXBhaWduLmFsZ28udHM6MjQ2CgkvLyB0aGlzLmFsZ29Ub1ZvdGVSYXRpb24udmFsdWUgPSBhbGdvVG9Wb3RlUmF0aW8KCWJ5dGUgMHg2MTZjNjc2ZjU0NmY1NjZmNzQ2NTUyNjE3NDY5NmY2ZSAvLyAiYWxnb1RvVm90ZVJhdGlvbiIKCWZyYW1lX2RpZyAtMSAvLyBhbGdvVG9Wb3RlUmF0aW86IHVpbnQ2NAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvY2FtcGFpZ24vY2FtcGFpZ24uYWxnby50czoyNDcKCS8vIHRoaXMudmlwVm90ZVdlaWdodC52YWx1ZSA9IHZpcFZvdGVXZWlnaHQKCWJ5dGUgMHg3NjY5NzA1NjZmNzQ2NTU3NjU2OTY3Njg3NCAvLyAidmlwVm90ZVdlaWdodCIKCWZyYW1lX2RpZyAtMiAvLyB2aXBWb3RlV2VpZ2h0OiB1aW50NjQKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL2NhbXBhaWduL2NhbXBhaWduLmFsZ28udHM6MjQ4CgkvLyB0aGlzLnZvdGluZ1BlcmlvZC52YWx1ZSA9IHZvdGluZ1BlcmlvZAoJYnl0ZSAweDc2NmY3NDY5NmU2NzUwNjU3MjY5NmY2NCAvLyAidm90aW5nUGVyaW9kIgoJZnJhbWVfZGlnIC0zIC8vIHZvdGluZ1BlcmlvZDogdWludDY0CglhcHBfZ2xvYmFsX3B1dAoJcmV0c3ViCgovLyA9PT09PT09PT09PT09PT09PT09PT09PT0KLy8gPT09PSBQcml2YXRlIE1ldGhvZHMgPT09Ci8vID09PT09PT09PT09PT09PT09PT09PT09PQpkb0F4ZmVyOgoJcHJvdG8gMyAwCgoJLy8gY29udHJhY3RzL2NhbXBhaWduL2NhbXBhaWduLmFsZ28udHM6MjU1CgkvLyBzZW5kQXNzZXRUcmFuc2Zlcih7CgkvLyAgICAgICBhc3NldFJlY2VpdmVyOiByZWNlaXZlciwKCS8vICAgICAgIHhmZXJBc3NldDogYXNzZXQsCgkvLyAgICAgICBhc3NldEFtb3VudDogYW1vdW50LAoJLy8gICAgIH0pCglpdHhuX2JlZ2luCglpbnQgYXhmZXIKCWl0eG5fZmllbGQgVHlwZUVudW0KCgkvLyBjb250cmFjdHMvY2FtcGFpZ24vY2FtcGFpZ24uYWxnby50czoyNTYKCS8vIGFzc2V0UmVjZWl2ZXI6IHJlY2VpdmVyCglmcmFtZV9kaWcgLTEgLy8gcmVjZWl2ZXI6IGFjY291bnQKCWl0eG5fZmllbGQgQXNzZXRSZWNlaXZlcgoKCS8vIGNvbnRyYWN0cy9jYW1wYWlnbi9jYW1wYWlnbi5hbGdvLnRzOjI1NwoJLy8geGZlckFzc2V0OiBhc3NldAoJZnJhbWVfZGlnIC0yIC8vIGFzc2V0OiBhc3NldAoJaXR4bl9maWVsZCBYZmVyQXNzZXQKCgkvLyBjb250cmFjdHMvY2FtcGFpZ24vY2FtcGFpZ24uYWxnby50czoyNTgKCS8vIGFzc2V0QW1vdW50OiBhbW91bnQKCWZyYW1lX2RpZyAtMyAvLyBhbW91bnQ6IHVpbnQ2NAoJaXR4bl9maWVsZCBBc3NldEFtb3VudAoKCS8vIEZlZSBmaWVsZCBub3Qgc2V0LCBkZWZhdWx0aW5nIHRvIDAKCWludCAwCglpdHhuX2ZpZWxkIEZlZQoKCS8vIFN1Ym1pdCBpbm5lciB0cmFuc2FjdGlvbgoJaXR4bl9zdWJtaXQKCXJldHN1YgoKZG9PcHRJbjoKCXByb3RvIDIgMAoKCS8vIGNvbnRyYWN0cy9jYW1wYWlnbi9jYW1wYWlnbi5hbGdvLnRzOjI2MwoJLy8gdGhpcy5kb0F4ZmVyKGFjY291bnQsIGFzc2V0LCAwKQoJaW50IDAKCWZyYW1lX2RpZyAtMiAvLyBhc3NldDogYXNzZXQKCWZyYW1lX2RpZyAtMSAvLyBhY2NvdW50OiBhY2NvdW50CgljYWxsc3ViIGRvQXhmZXIKCXJldHN1YgoKLy8gPT09PT09PT09PT09PT09PT09PT09PT09Ci8vID09PT0gQWRtaW4gTWV0aG9kcyA9PT09Ci8vID09PT09PT09PT09PT09PT09PT09PT09PQovLyBib290c3RyYXAodWludDY0KXVpbnQ2NAovLwovLyAvLy8gPT09PT09PT09PT09PT09PT09PT09PT09CmFiaV9yb3V0ZV9ib290c3RyYXA6CglieXRlIDB4IC8vIHB1c2ggZW1wdHkgYnl0ZXMgdG8gZmlsbCB0aGUgc3RhY2sgZnJhbWUgZm9yIHRoaXMgc3Vicm91dGluZSdzIGxvY2FsIHZhcmlhYmxlcwoKCS8vIHZvdGVBc2FUb3RhbDogdWludDY0Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglidG9pCgoJLy8gZXhlY3V0ZSBib290c3RyYXAodWludDY0KXVpbnQ2NAoJY2FsbHN1YiBib290c3RyYXAKCWludCAxCglyZXR1cm4KCmJvb3RzdHJhcDoKCXByb3RvIDIgMAoKCS8vIGNvbnRyYWN0cy9jYW1wYWlnbi9jYW1wYWlnbi5hbGdvLnRzOjI3MAoJLy8gdmVyaWZ5VHhuKHRoaXMudHhuLCB7IHNlbmRlcjogdGhpcy5hcHAuY3JlYXRvciB9KQoJLy8gdmVyaWZ5IHNlbmRlcgoJdHhuIFNlbmRlcgoJdHhuYSBBcHBsaWNhdGlvbnMgMAoJYXBwX3BhcmFtc19nZXQgQXBwQ3JlYXRvcgoJYXNzZXJ0Cgk9PQoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL2NhbXBhaWduL2NhbXBhaWduLmFsZ28udHM6MjcxCgkvLyBhc3NlcnQoIXRoaXMudm90ZXJzQXNhSWQuZXhpc3RzKQoJdHhuYSBBcHBsaWNhdGlvbnMgMAoJYnl0ZSAweDc2NmY3NDY1NzI3MzQxNzM2MTQ5NjQgLy8gInZvdGVyc0FzYUlkIgoJYXBwX2dsb2JhbF9nZXRfZXgKCXN3YXAKCXBvcAoJIQoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL2NhbXBhaWduL2NhbXBhaWduLmFsZ28udHM6MjcyCgkvLyB2b3RlcnNBc2EgPSBzZW5kQXNzZXRDcmVhdGlvbih7CgkvLyAgICAgICBjb25maWdBc3NldE5hbWU6ICdBbGdvSHViIFZvdGUnLAoJLy8gICAgICAgY29uZmlnQXNzZXRVbml0TmFtZTogJ0FIVicsCgkvLyAgICAgICBjb25maWdBc3NldERlY2ltYWxzOiAxOCwKCS8vICAgICAgIGNvbmZpZ0Fzc2V0VG90YWw6IHZvdGVBc2FUb3RhbCwKCS8vICAgICAgIGNvbmZpZ0Fzc2V0RnJlZXplOiB0aGlzLmFwcC5hZGRyZXNzLAoJLy8gICAgICAgY29uZmlnQXNzZXRDbGF3YmFjazogdGhpcy5hcHAuYWRkcmVzcywKCS8vICAgICAgIGNvbmZpZ0Fzc2V0UmVzZXJ2ZTogdGhpcy5hcHAuYWRkcmVzcywKCS8vICAgICB9KQoJaXR4bl9iZWdpbgoJaW50IGFjZmcKCWl0eG5fZmllbGQgVHlwZUVudW0KCgkvLyBjb250cmFjdHMvY2FtcGFpZ24vY2FtcGFpZ24uYWxnby50czoyNzMKCS8vIGNvbmZpZ0Fzc2V0TmFtZTogJ0FsZ29IdWIgVm90ZScKCWJ5dGUgMHg0MTZjNjc2ZjQ4NzU2MjIwNTY2Zjc0NjUgLy8gIkFsZ29IdWIgVm90ZSIKCWl0eG5fZmllbGQgQ29uZmlnQXNzZXROYW1lCgoJLy8gY29udHJhY3RzL2NhbXBhaWduL2NhbXBhaWduLmFsZ28udHM6Mjc0CgkvLyBjb25maWdBc3NldFVuaXROYW1lOiAnQUhWJwoJYnl0ZSAweDQxNDg1NiAvLyAiQUhWIgoJaXR4bl9maWVsZCBDb25maWdBc3NldFVuaXROYW1lCgoJLy8gY29udHJhY3RzL2NhbXBhaWduL2NhbXBhaWduLmFsZ28udHM6Mjc1CgkvLyBjb25maWdBc3NldERlY2ltYWxzOiAxOAoJaW50IDE4CglpdHhuX2ZpZWxkIENvbmZpZ0Fzc2V0RGVjaW1hbHMKCgkvLyBjb250cmFjdHMvY2FtcGFpZ24vY2FtcGFpZ24uYWxnby50czoyNzYKCS8vIGNvbmZpZ0Fzc2V0VG90YWw6IHZvdGVBc2FUb3RhbAoJZnJhbWVfZGlnIC0xIC8vIHZvdGVBc2FUb3RhbDogdWludDY0CglpdHhuX2ZpZWxkIENvbmZpZ0Fzc2V0VG90YWwKCgkvLyBjb250cmFjdHMvY2FtcGFpZ24vY2FtcGFpZ24uYWxnby50czoyNzcKCS8vIGNvbmZpZ0Fzc2V0RnJlZXplOiB0aGlzLmFwcC5hZGRyZXNzCglnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwoJaXR4bl9maWVsZCBDb25maWdBc3NldEZyZWV6ZQoKCS8vIGNvbnRyYWN0cy9jYW1wYWlnbi9jYW1wYWlnbi5hbGdvLnRzOjI3OAoJLy8gY29uZmlnQXNzZXRDbGF3YmFjazogdGhpcy5hcHAuYWRkcmVzcwoJZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKCWl0eG5fZmllbGQgQ29uZmlnQXNzZXRDbGF3YmFjawoKCS8vIGNvbnRyYWN0cy9jYW1wYWlnbi9jYW1wYWlnbi5hbGdvLnRzOjI3OQoJLy8gY29uZmlnQXNzZXRSZXNlcnZlOiB0aGlzLmFwcC5hZGRyZXNzCglnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwoJaXR4bl9maWVsZCBDb25maWdBc3NldFJlc2VydmUKCgkvLyBGZWUgZmllbGQgbm90IHNldCwgZGVmYXVsdGluZyB0byAwCglpbnQgMAoJaXR4bl9maWVsZCBGZWUKCgkvLyBTdWJtaXQgaW5uZXIgdHJhbnNhY3Rpb24KCWl0eG5fc3VibWl0CglpdHhuIENyZWF0ZWRBc3NldElECglmcmFtZV9idXJ5IC0yIC8vIHZvdGVyc0FzYTogYXNzZXQKCgkvLyBjb250cmFjdHMvY2FtcGFpZ24vY2FtcGFpZ24uYWxnby50czoyODEKCS8vIHRoaXMudm90ZXJzQXNhSWQudmFsdWUgPSB2b3RlcnNBc2EKCWJ5dGUgMHg3NjZmNzQ2NTcyNzM0MTczNjE0OTY0IC8vICJ2b3RlcnNBc2FJZCIKCWZyYW1lX2RpZyAtMiAvLyB2b3RlcnNBc2E6IGFzc2V0CglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9jYW1wYWlnbi9jYW1wYWlnbi5hbGdvLnRzOjI4MgoJLy8gdGhpcy5kb09wdEluKHRoaXMuYXBwLmFkZHJlc3MsIHZvdGVyc0FzYSkKCWZyYW1lX2RpZyAtMiAvLyB2b3RlcnNBc2E6IGFzc2V0CglnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwoJY2FsbHN1YiBkb09wdEluCgoJLy8gY29udHJhY3RzL2NhbXBhaWduL2NhbXBhaWduLmFsZ28udHM6MjgzCgkvLyByZXR1cm4gdm90ZXJzQXNhOwoJZnJhbWVfZGlnIC0yIC8vIHZvdGVyc0FzYTogYXNzZXQKCWl0b2IKCWJ5dGUgMHgxNTFmN2M3NQoJc3dhcAoJY29uY2F0Cglsb2cKCXJldHN1YgoKLy8gc2V0VmlwU3RhdHVzKGFzc2V0LGJvb2wsYWNjb3VudCl2b2lkCi8vCi8vIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFycwphYmlfcm91dGVfc2V0VmlwU3RhdHVzOgoJLy8gdm90ZXJzQXNhOiBhc3NldAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMwoJYnRvaQoJdHhuYXMgQXNzZXRzCgoJLy8gaXNWaXA6IGJvb2wKCXR4bmEgQXBwbGljYXRpb25BcmdzIDIKCWR1cAoJbGVuCglpbnQgMQoJPT0KCWFzc2VydAoJaW50IDAKCWdldGJpdAoKCS8vIGFjY291bnQ6IGFjY291bnQKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWJ0b2kKCXR4bmFzIEFjY291bnRzCgoJLy8gZXhlY3V0ZSBzZXRWaXBTdGF0dXMoYXNzZXQsYm9vbCxhY2NvdW50KXZvaWQKCWNhbGxzdWIgc2V0VmlwU3RhdHVzCglpbnQgMQoJcmV0dXJuCgpzZXRWaXBTdGF0dXM6Cglwcm90byAzIDAKCgkvLyBjb250cmFjdHMvY2FtcGFpZ24vY2FtcGFpZ24uYWxnby50czoyODgKCS8vIGFzc2VydCh0aGlzLnZvdGVyc0FzYUlkLmV4aXN0cykKCXR4bmEgQXBwbGljYXRpb25zIDAKCWJ5dGUgMHg3NjZmNzQ2NTcyNzM0MTczNjE0OTY0IC8vICJ2b3RlcnNBc2FJZCIKCWFwcF9nbG9iYWxfZ2V0X2V4Cglzd2FwCglwb3AKCWFzc2VydAoKCS8vIE9ubHkgYWxsb3cgYXBwIGNyZWF0b3IgdG8gc2V0IFZpcCBzdGF0dXMKCS8vIGNvbnRyYWN0cy9jYW1wYWlnbi9jYW1wYWlnbi5hbGdvLnRzOjI5MAoJLy8gdmVyaWZ5VHhuKHRoaXMudHhuLCB7IHNlbmRlcjogZ2xvYmFscy5jcmVhdG9yQWRkcmVzcyB9KQoJLy8gdmVyaWZ5IHNlbmRlcgoJdHhuIFNlbmRlcgoJZ2xvYmFsIENyZWF0b3JBZGRyZXNzCgk9PQoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL2NhbXBhaWduL2NhbXBhaWduLmFsZ28udHM6MjkyCgkvLyBhc3NlcnQoYWNjb3VudC5hc3NldEJhbGFuY2UodGhpcy52b3RlcnNBc2FJZC52YWx1ZSkgPT09IDEpCglmcmFtZV9kaWcgLTEgLy8gYWNjb3VudDogYWNjb3VudAoJYnl0ZSAweDc2NmY3NDY1NzI3MzQxNzM2MTQ5NjQgLy8gInZvdGVyc0FzYUlkIgoJYXBwX2dsb2JhbF9nZXQKCWFzc2V0X2hvbGRpbmdfZ2V0IEFzc2V0QmFsYW5jZQoJYXNzZXJ0CglpbnQgMQoJPT0KCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9jYW1wYWlnbi9jYW1wYWlnbi5hbGdvLnRzOjI5MwoJLy8gdGhpcy52aXBWb3RlcnMoYWNjb3VudCkudmFsdWUgPSBpc1ZpcAoJZnJhbWVfZGlnIC0xIC8vIGFjY291bnQ6IGFjY291bnQKCWZyYW1lX2RpZyAtMiAvLyBpc1ZpcDogYm9vbAoJYnl0ZSAweDAwCglpbnQgMAoJdW5jb3ZlciAyCglzZXRiaXQKCWFwcF9nbG9iYWxfcHV0CglyZXRzdWIKCi8vID09PT09PT09PT09PT09PT09PT09PT09PQovLyA9PT09IFB1YmxpYyBNZXRob2RzID09PT0KLy8gPT09PT09PT09PT09PT09PT09PT09PT09Ci8vIGNyZWF0ZUNhbXBhaWduKHN0cmluZyx1aW50NjQsdWludDY0LHVpbnQ2NCx1aW50NjQsdWludDY0LGFzc2V0LGFzc2V0LGFjY291bnQsYXNzZXQpdWludDY0Ci8vCi8vIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFycwphYmlfcm91dGVfY3JlYXRlQ2FtcGFpZ246CglieXRlIDB4OyBkdXAgLy8gcHVzaCBlbXB0eSBieXRlcyB0byBmaWxsIHRoZSBzdGFjayBmcmFtZSBmb3IgdGhpcyBzdWJyb3V0aW5lJ3MgbG9jYWwgdmFyaWFibGVzCgoJLy8gbWV0YWRhdGFVcmw6IHN0cmluZwoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMTAKCWV4dHJhY3QgMiAwCgoJLy8gZHVyYXRpb246IHVpbnQ2NAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgOQoJYnRvaQoKCS8vIGhhcmRDYXA6IHVpbnQ2NAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgOAoJYnRvaQoKCS8vIHNvZnRDYXA6IHVpbnQ2NAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgNwoJYnRvaQoKCS8vIG1heEJ1eUNhcDogdWludDY0Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyA2CglidG9pCgoJLy8gcHJpY2U6IHVpbnQ2NAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgNQoJYnRvaQoKCS8vIGJ1eUFzYTogYXNzZXQKCXR4bmEgQXBwbGljYXRpb25BcmdzIDQKCWJ0b2kKCXR4bmFzIEFzc2V0cwoKCS8vIGlkb0FzYTogYXNzZXQKCXR4bmEgQXBwbGljYXRpb25BcmdzIDMKCWJ0b2kKCXR4bmFzIEFzc2V0cwoKCS8vIGFkbWluQWNjb3VudDogYWNjb3VudAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgoJYnRvaQoJdHhuYXMgQWNjb3VudHMKCgkvLyB2b3RlcnNBc2E6IGFzc2V0Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglidG9pCgl0eG5hcyBBc3NldHMKCgkvLyBleGVjdXRlIGNyZWF0ZUNhbXBhaWduKHN0cmluZyx1aW50NjQsdWludDY0LHVpbnQ2NCx1aW50NjQsdWludDY0LGFzc2V0LGFzc2V0LGFjY291bnQsYXNzZXQpdWludDY0CgljYWxsc3ViIGNyZWF0ZUNhbXBhaWduCglpbnQgMQoJcmV0dXJuCgpjcmVhdGVDYW1wYWlnbjoKCXByb3RvIDEyIDAKCgkvLyBjb250cmFjdHMvY2FtcGFpZ24vY2FtcGFpZ24uYWxnby50czozMTIKCS8vIGFzc2VydCh0aGlzLnZvdGVyc0FzYUlkLmV4aXN0cykKCXR4bmEgQXBwbGljYXRpb25zIDAKCWJ5dGUgMHg3NjZmNzQ2NTcyNzM0MTczNjE0OTY0IC8vICJ2b3RlcnNBc2FJZCIKCWFwcF9nbG9iYWxfZ2V0X2V4Cglzd2FwCglwb3AKCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9jYW1wYWlnbi9jYW1wYWlnbi5hbGdvLnRzOjMxMwoJLy8gc2VuZE1ldGhvZENhbGw8W10sIHZvaWQ+KHsKCS8vICAgICAgIG5hbWU6ICdjcmVhdGVBcHBsaWNhdGlvbicsCgkvLyAgICAgICBjbGVhclN0YXRlUHJvZ3JhbTogQ2FtcGFpZ24uY2xlYXJQcm9ncmFtKCksCgkvLyAgICAgICBhcHByb3ZhbFByb2dyYW06IENhbXBhaWduLmFwcHJvdmFsUHJvZ3JhbSgpLAoJLy8gICAgICAgZ2xvYmFsTnVtQnl0ZVNsaWNlOiA2LAoJLy8gICAgICAgZ2xvYmFsTnVtVWludDogMywKCS8vICAgICB9KQoJaXR4bl9iZWdpbgoJaW50IGFwcGwKCWl0eG5fZmllbGQgVHlwZUVudW0KCW1ldGhvZCAiY3JlYXRlQXBwbGljYXRpb24oKXZvaWQiCglpdHhuX2ZpZWxkIEFwcGxpY2F0aW9uQXJncwoKCS8vIGNvbnRyYWN0cy9jYW1wYWlnbi9jYW1wYWlnbi5hbGdvLnRzOjMxNQoJLy8gY2xlYXJTdGF0ZVByb2dyYW06IENhbXBhaWduLmNsZWFyUHJvZ3JhbSgpCglieXRlIGI2NCBDUT09CglpdHhuX2ZpZWxkIENsZWFyU3RhdGVQcm9ncmFtCgoJLy8gY29udHJhY3RzL2NhbXBhaWduL2NhbXBhaWduLmFsZ28udHM6MzE2CgkvLyBhcHByb3ZhbFByb2dyYW06IENhbXBhaWduLmFwcHJvdmFsUHJvZ3JhbSgpCglieXRlIGI2NCBDU0FEQVFBRUpnc0lZMkZ0Y0dGcFoyNEVGUjk4ZFJKcGMwRndjSEp2ZG1Wa1EyRnRjR0ZwWjI0TGRtOTBaWEp6UVhOaFNXUUZZV1J0YVc0QUNHbGtiMEZ6WVVsa0NHSjFlVUZ6WVVsa0NuWnZkR1Z6Vkc5MFlXd01kbTkwWlhOSmJrWmhkbTl5QVFBeEdDTU5nUVlMTVJrSWpRY0RLd0FBQUFBQUFBQUFBQUFET1FDSUFBSWlRNG9BQUNzalp5Y0dJMmNuQnlObktpTW5DaU5QQWxSbmlZb0FBU3BrSTFNVVFRQUNJb2txWkNOVGlZb0FBU0tKaWdFQXNTU3lFRElLc2hTTC83SVJJN0lTSTdJQnM0azJHZ3RYQWdBMkdnb1hOaG9KRnpZYUNCYzJHZ2NYTmhvR0Z6WWFCUmMyR2dRWHdEQTJHZ01Yd0RBMkdnSVh3REEyR2dFWHdCeUlBQUlpUTRvTEFEWXlBQ2hsVEVnVVJDY0VpLzluSzR2K1p5Y0dpLzFuSndlTC9HY29Kd1VuQllBQ0FES0wreGFJQXZxTCtoYUlBdlNMK1JhSUF1NkwrQmFJQXVneUI0djNDQmFJQXQ4eUI0djNDSXYyQ0JhSUF0T0w5VWtWRmxjR0FreFFpQUxUU0ZCbmkvMkkvMFNML0lqL1A0a25CVFlhQVJmQU1ERVdJZ2xKT0JBa0VrU0lBQUlpUTRvREFEWXlBQ2hsVEVoRU1RQW5CR1FTUkNoa05RQTBBRmNZQ0Jjb1pEVUFOQUJYQUFnWENvejlpLzg0RW92OUVrU0wvemdVTWdvU1JJdi9PQUF4QUJKRWkvODRFWXYrRWtTSkp3VTJHZ0lYTmhvQkY4QXdNUllpQ1VrNEVDUVNSSWdBQWlKRGlnUUFOaklBS0dWTVNFU0kvcDFFS21RalV4UkJBQWtxSWljS0kwOENWR2VML1Noa05RQTBBRmNBQ0JjTGpQeUwvemdTaS93U1JJdi9PQlF5Q2hKRWkvODRBREVBRWtTTC96Z1JpLzRTUkltSUFBSWlRNG9BQURZeUFDaGxURWhFaVA1SVJDaGtOUUEwQUZjb0NCY3lCdzFFaVlnQUFpSkRpZ0FBTmpJQUtHVk1TRVFvWkRVQU5BQlhJQWdYTWdjTlJJaitGeFJFaVlnQUFpSkRpZ0FBTmpJQUtHVk1TRVF4QUNjRVpCSkVLR1ExQURRQVZ5Z0lGeklIRFVTSk5ob0JGOEF3aUFBQ0lrT0tBUUEyTWdBb1pVeElSREVBSndSa0VrUW9aRFVBTkFCWEtBZ1hNZ2NOUklrMkdnSVh3REEyR2dGSkZTSVNSQ05UaUFBQ0lrT0tBZ0EyTWdBb1pVeElSQ2hrTlFBMEFGY2dDQmN5QncxRU1RQXJaSEFBUkNJTlJJQUJkakVBVUwxTVNCUkVKd2duQ0dRaUNHZUwvMEVBQ0NjSkp3bGtJZ2huaVlnQUFpSkRpZ0FBSndsa0ZpY0laQlpRS1V4UXNJbUlBQUlpUTRvQUFDdGtGaWxNVUxDSmlBQUNJa09LQUFBbkJtUVdLVXhRc0ltSUFBSWlRNG9BQUNjSFpCWXBURkN3aVlnQUFpSkRpZ0FBS0dRcFRGQ3dpWWdBQWlKRGlnQUFnQTkyWlhOMGFXNW5VMk5vWldSMWJHVmtLVXhRc0ltQUJMaEVlelkyR2dDT0FmekpBSUFFaHhkbEU0QUVwaUpJam9BRUEwdUY0WUFFOFZkM0pvQUVvUTFaRDRBRUxZc0k4WUFFZCtCcEk0QUVRSmpEOW9BRXdkODFBWUFFTHFmdW1ZQUVrYjJ4Y29BRUZId0lPNEFFRU5VTXdJQUVSanE0MFRZYUFJNE8vSjc5U2YycS9oWCtPUDVjL29MK3J2OEgveDMvTGY4Ky8wLy9YZ0NLQkFPTC9Jdi9VSXY5aS82SmlnUURpL3lML2xDTS9Jdi9TUldML2hjSUZsY0dBb3oraS8xTVVJejlpL3lML1l2K2lRPT0KCWl0eG5fZmllbGQgQXBwcm92YWxQcm9ncmFtCgoJLy8gY29udHJhY3RzL2NhbXBhaWduL2NhbXBhaWduLmFsZ28udHM6MzE3CgkvLyBnbG9iYWxOdW1CeXRlU2xpY2U6IDYKCWludCA2CglpdHhuX2ZpZWxkIEdsb2JhbE51bUJ5dGVTbGljZQoKCS8vIGNvbnRyYWN0cy9jYW1wYWlnbi9jYW1wYWlnbi5hbGdvLnRzOjMxOAoJLy8gZ2xvYmFsTnVtVWludDogMwoJaW50IDMKCWl0eG5fZmllbGQgR2xvYmFsTnVtVWludAoKCS8vIEZlZSBmaWVsZCBub3Qgc2V0LCBkZWZhdWx0aW5nIHRvIDAKCWludCAwCglpdHhuX2ZpZWxkIEZlZQoKCS8vIFN1Ym1pdCBpbm5lciB0cmFuc2FjdGlvbgoJaXR4bl9zdWJtaXQKCgkvLyBjb250cmFjdHMvY2FtcGFpZ24vY2FtcGFpZ24uYWxnby50czozMjEKCS8vIGNhbXBhaWduQXBwID0gdGhpcy5pdHhuLmNyZWF0ZWRBcHBsaWNhdGlvbklECglpdHhuIENyZWF0ZWRBcHBsaWNhdGlvbklECglmcmFtZV9idXJ5IC0xMSAvLyBjYW1wYWlnbkFwcDogYXBwbGljYXRpb24KCgkvLyBjb250cmFjdHMvY2FtcGFpZ24vY2FtcGFpZ24uYWxnby50czozMjMKCS8vIHNlbmRQYXltZW50KHsKCS8vICAgICAgIGFtb3VudDogMzAwXzAwMCwKCS8vICAgICAgIHJlY2VpdmVyOiBjYW1wYWlnbkFwcC5hZGRyZXNzLAoJLy8gICAgIH0pCglpdHhuX2JlZ2luCglpbnQgcGF5CglpdHhuX2ZpZWxkIFR5cGVFbnVtCgoJLy8gY29udHJhY3RzL2NhbXBhaWduL2NhbXBhaWduLmFsZ28udHM6MzI0CgkvLyBhbW91bnQ6IDMwMF8wMDAKCWludCAzMDBfMDAwCglpdHhuX2ZpZWxkIEFtb3VudAoKCS8vIGNvbnRyYWN0cy9jYW1wYWlnbi9jYW1wYWlnbi5hbGdvLnRzOjMyNQoJLy8gcmVjZWl2ZXI6IGNhbXBhaWduQXBwLmFkZHJlc3MKCWZyYW1lX2RpZyAtMTEgLy8gY2FtcGFpZ25BcHA6IGFwcGxpY2F0aW9uCglhcHBfcGFyYW1zX2dldCBBcHBBZGRyZXNzCglhc3NlcnQKCWl0eG5fZmllbGQgUmVjZWl2ZXIKCgkvLyBGZWUgZmllbGQgbm90IHNldCwgZGVmYXVsdGluZyB0byAwCglpbnQgMAoJaXR4bl9maWVsZCBGZWUKCgkvLyBTdWJtaXQgaW5uZXIgdHJhbnNhY3Rpb24KCWl0eG5fc3VibWl0CgoJLy8gaWYwX2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL2NhbXBhaWduL2NhbXBhaWduLmFsZ28udHM6MzI3CgkvLyB0aGlzLmFsZ29odWJDYW1wYWlnbnMuZXhpc3RzCgl0eG5hIEFwcGxpY2F0aW9ucyAwCglieXRlIDB4NjE2YzY3NmY2ODc1NjI0MzYxNmQ3MDYxNjk2NzZlNzMgLy8gImFsZ29odWJDYW1wYWlnbnMiCglhcHBfZ2xvYmFsX2dldF9leAoJc3dhcAoJcG9wCglieiBpZjBfZWxzZQoKCS8vIGlmMF9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvY2FtcGFpZ24vY2FtcGFpZ24uYWxnby50czozMjgKCS8vIHRoaXMuYWxnb2h1YkNhbXBhaWducy52YWx1ZS5wdXNoKGNhbXBhaWduQXBwKQoJYnl0ZSAweDYxNmM2NzZmNjg3NTYyNDM2MTZkNzA2MTY5Njc2ZTczIC8vICJhbGdvaHViQ2FtcGFpZ25zIgoJYXBwX2dsb2JhbF9nZXQKCWV4dHJhY3QgMiAwCglmcmFtZV9kaWcgLTExIC8vIGNhbXBhaWduQXBwOiBhcHBsaWNhdGlvbgoJaXRvYgoJY29uY2F0CglieXRlIDB4NjE2YzY3NmY2ODc1NjI0MzYxNmQ3MDYxNjk2NzZlNzMgLy8gImFsZ29odWJDYW1wYWlnbnMiCglzd2FwCglkdXAKCWxlbgoJaW50IDgKCS8KCWl0b2IKCWV4dHJhY3QgNiAyCglzd2FwCgljb25jYXQKCWFwcF9nbG9iYWxfcHV0CgliIGlmMF9lbmQKCmlmMF9lbHNlOgoJLy8gY29udHJhY3RzL2NhbXBhaWduL2NhbXBhaWduLmFsZ28udHM6MzMwCgkvLyBuZXdBcHA6IEFwcGxpY2F0aW9uW10gPSBbY2FtcGFpZ25BcHBdCglmcmFtZV9kaWcgLTExIC8vIGNhbXBhaWduQXBwOiBhcHBsaWNhdGlvbgoJaXRvYgoJZnJhbWVfYnVyeSAtMTIgLy8gbmV3QXBwOiBhcHBsaWNhdGlvbltdCgoJLy8gY29udHJhY3RzL2NhbXBhaWduL2NhbXBhaWduLmFsZ28udHM6MzMxCgkvLyB0aGlzLmFsZ29odWJDYW1wYWlnbnMudmFsdWUgPSBuZXdBcHAKCWJ5dGUgMHg2MTZjNjc2ZjY4NzU2MjQzNjE2ZDcwNjE2OTY3NmU3MyAvLyAiYWxnb2h1YkNhbXBhaWducyIKCWZyYW1lX2RpZyAtMTIgLy8gbmV3QXBwOiBhcHBsaWNhdGlvbltdCglkdXAKCWxlbgoJaW50IDgKCS8KCWl0b2IKCWV4dHJhY3QgNiAyCglzd2FwCgljb25jYXQKCWFwcF9nbG9iYWxfcHV0CgppZjBfZW5kOgoJLy8gY29udHJhY3RzL2NhbXBhaWduL2NhbXBhaWduLmFsZ28udHM6MzM0CgkvLyBzZW5kTWV0aG9kQ2FsbDxbQWNjb3VudCwgQXNzZXQsIEFzc2V0LCBBc3NldCwgbnVtYmVyLCBudW1iZXIsIG51bWJlciwgbnVtYmVyLCBudW1iZXIsIG51bWJlciwgc3RyaW5nXSwgdm9pZD4oewoJLy8gICAgICAgYXBwbGljYXRpb25JRDogY2FtcGFpZ25BcHAsCgkvLyAgICAgICBuYW1lOiAnY3JlYXRlQ2FtcGFpZ24nLAoJLy8gICAgICAgbWV0aG9kQXJnczogWwoJLy8gICAgICAgICBhZG1pbkFjY291bnQsCgkvLyAgICAgICAgIHRoaXMudm90ZXJzQXNhSWQudmFsdWUsCgkvLyAgICAgICAgIGlkb0FzYSwKCS8vICAgICAgICAgYnV5QXNhLAoJLy8gICAgICAgICBwcmljZSwKCS8vICAgICAgICAgbWF4QnV5Q2FwLAoJLy8gICAgICAgICBzb2Z0Q2FwLAoJLy8gICAgICAgICBoYXJkQ2FwLAoJLy8gICAgICAgICB0aGlzLnZvdGluZ1BlcmlvZC52YWx1ZSwKCS8vICAgICAgICAgZHVyYXRpb24sCgkvLyAgICAgICAgIG1ldGFkYXRhVXJsLAoJLy8gICAgICAgXSwKCS8vICAgICB9KQoJaXR4bl9iZWdpbgoJaW50IGFwcGwKCWl0eG5fZmllbGQgVHlwZUVudW0KCW1ldGhvZCAiY3JlYXRlQ2FtcGFpZ24oYWNjb3VudCxhc3NldCxhc3NldCxhc3NldCx1aW50NjQsdWludDY0LHVpbnQ2NCx1aW50NjQsdWludDY0LHVpbnQ2NCxzdHJpbmcpdm9pZCIKCWl0eG5fZmllbGQgQXBwbGljYXRpb25BcmdzCgoJLy8gY29udHJhY3RzL2NhbXBhaWduL2NhbXBhaWduLmFsZ28udHM6MzM1CgkvLyBhcHBsaWNhdGlvbklEOiBjYW1wYWlnbkFwcAoJZnJhbWVfZGlnIC0xMSAvLyBjYW1wYWlnbkFwcDogYXBwbGljYXRpb24KCWl0eG5fZmllbGQgQXBwbGljYXRpb25JRAoKCS8vIGNvbnRyYWN0cy9jYW1wYWlnbi9jYW1wYWlnbi5hbGdvLnRzOjMzNwoJLy8gbWV0aG9kQXJnczogWwoJLy8gICAgICAgICBhZG1pbkFjY291bnQsCgkvLyAgICAgICAgIHRoaXMudm90ZXJzQXNhSWQudmFsdWUsCgkvLyAgICAgICAgIGlkb0FzYSwKCS8vICAgICAgICAgYnV5QXNhLAoJLy8gICAgICAgICBwcmljZSwKCS8vICAgICAgICAgbWF4QnV5Q2FwLAoJLy8gICAgICAgICBzb2Z0Q2FwLAoJLy8gICAgICAgICBoYXJkQ2FwLAoJLy8gICAgICAgICB0aGlzLnZvdGluZ1BlcmlvZC52YWx1ZSwKCS8vICAgICAgICAgZHVyYXRpb24sCgkvLyAgICAgICAgIG1ldGFkYXRhVXJsLAoJLy8gICAgICAgXQoJZnJhbWVfZGlnIC0yIC8vIGFkbWluQWNjb3VudDogYWNjb3VudAoJaXR4bl9maWVsZCBBY2NvdW50cwoJYnl0ZSAweDAwMDAwMDAwMDAwMDAwMDEKCWl0eG5fZmllbGQgQXBwbGljYXRpb25BcmdzCglieXRlIDB4NzY2Zjc0NjU3MjczNDE3MzYxNDk2NCAvLyAidm90ZXJzQXNhSWQiCglhcHBfZ2xvYmFsX2dldAoJaXR4bl9maWVsZCBBc3NldHMKCWJ5dGUgMHgwMDAwMDAwMDAwMDAwMDAwCglpdHhuX2ZpZWxkIEFwcGxpY2F0aW9uQXJncwoJZnJhbWVfZGlnIC0zIC8vIGlkb0FzYTogYXNzZXQKCWl0eG5fZmllbGQgQXNzZXRzCglieXRlIDB4MDAwMDAwMDAwMDAwMDAwMQoJaXR4bl9maWVsZCBBcHBsaWNhdGlvbkFyZ3MKCWZyYW1lX2RpZyAtNCAvLyBidXlBc2E6IGFzc2V0CglpdHhuX2ZpZWxkIEFzc2V0cwoJYnl0ZSAweDAwMDAwMDAwMDAwMDAwMDIKCWl0eG5fZmllbGQgQXBwbGljYXRpb25BcmdzCglmcmFtZV9kaWcgLTUgLy8gcHJpY2U6IHVpbnQ2NAoJaXRvYgoJaXR4bl9maWVsZCBBcHBsaWNhdGlvbkFyZ3MKCWZyYW1lX2RpZyAtNiAvLyBtYXhCdXlDYXA6IHVpbnQ2NAoJaXRvYgoJaXR4bl9maWVsZCBBcHBsaWNhdGlvbkFyZ3MKCWZyYW1lX2RpZyAtNyAvLyBzb2Z0Q2FwOiB1aW50NjQKCWl0b2IKCWl0eG5fZmllbGQgQXBwbGljYXRpb25BcmdzCglmcmFtZV9kaWcgLTggLy8gaGFyZENhcDogdWludDY0CglpdG9iCglpdHhuX2ZpZWxkIEFwcGxpY2F0aW9uQXJncwoJYnl0ZSAweDc2NmY3NDY5NmU2NzUwNjU3MjY5NmY2NCAvLyAidm90aW5nUGVyaW9kIgoJYXBwX2dsb2JhbF9nZXQKCWl0b2IKCWl0eG5fZmllbGQgQXBwbGljYXRpb25BcmdzCglmcmFtZV9kaWcgLTkgLy8gZHVyYXRpb246IHVpbnQ2NAoJaXRvYgoJaXR4bl9maWVsZCBBcHBsaWNhdGlvbkFyZ3MKCWZyYW1lX2RpZyAtMTAgLy8gbWV0YWRhdGFVcmw6IGJ5dGVzCglkdXAKCWxlbgoJaXRvYgoJZXh0cmFjdCA2IDIKCXN3YXAKCWNvbmNhdAoJaXR4bl9maWVsZCBBcHBsaWNhdGlvbkFyZ3MKCgkvLyBGZWUgZmllbGQgbm90IHNldCwgZGVmYXVsdGluZyB0byAwCglpbnQgMAoJaXR4bl9maWVsZCBGZWUKCgkvLyBTdWJtaXQgaW5uZXIgdHJhbnNhY3Rpb24KCWl0eG5fc3VibWl0CgoJLy8gY29udHJhY3RzL2NhbXBhaWduL2NhbXBhaWduLmFsZ28udHM6MzUyCgkvLyByZXR1cm4gY2FtcGFpZ25BcHA7CglmcmFtZV9kaWcgLTExIC8vIGNhbXBhaWduQXBwOiBhcHBsaWNhdGlvbgoJaXRvYgoJYnl0ZSAweDE1MWY3Yzc1Cglzd2FwCgljb25jYXQKCWxvZwoJcmV0c3ViCgovLyByZWdpc3RlckFzVm90ZXIoYXNzZXQpdm9pZAovLwovLyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnMKYWJpX3JvdXRlX3JlZ2lzdGVyQXNWb3RlcjoKCS8vIHZvdGVyc0FzYTogYXNzZXQKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWJ0b2kKCXR4bmFzIEFzc2V0cwoKCS8vIGV4ZWN1dGUgcmVnaXN0ZXJBc1ZvdGVyKGFzc2V0KXZvaWQKCWNhbGxzdWIgcmVnaXN0ZXJBc1ZvdGVyCglpbnQgMQoJcmV0dXJuCgpyZWdpc3RlckFzVm90ZXI6Cglwcm90byAxIDAKCgkvLyBjb250cmFjdHMvY2FtcGFpZ24vY2FtcGFpZ24uYWxnby50czozNTcKCS8vIGFzc2VydCh0aGlzLnZvdGVyc0FzYUlkLmV4aXN0cykKCXR4bmEgQXBwbGljYXRpb25zIDAKCWJ5dGUgMHg3NjZmNzQ2NTcyNzM0MTczNjE0OTY0IC8vICJ2b3RlcnNBc2FJZCIKCWFwcF9nbG9iYWxfZ2V0X2V4Cglzd2FwCglwb3AKCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9jYW1wYWlnbi9jYW1wYWlnbi5hbGdvLnRzOjM1OAoJLy8gYXNzZXJ0KHRoaXMudHhuLnNlbmRlci5hc3NldEJhbGFuY2UodGhpcy52b3RlcnNBc2FJZC52YWx1ZSkgPT09IDApCgl0eG4gU2VuZGVyCglieXRlIDB4NzY2Zjc0NjU3MjczNDE3MzYxNDk2NCAvLyAidm90ZXJzQXNhSWQiCglhcHBfZ2xvYmFsX2dldAoJYXNzZXRfaG9sZGluZ19nZXQgQXNzZXRCYWxhbmNlCglhc3NlcnQKCWludCAwCgk9PQoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL2NhbXBhaWduL2NhbXBhaWduLmFsZ28udHM6MzU5CgkvLyBhc3NlcnQodGhpcy50eG4uc2VuZGVyLmJhbGFuY2UgPj0gdGhpcy5hbGdvVG9Wb3RlUmF0aW9uLnZhbHVlKQoJdHhuIFNlbmRlcgoJYWNjdF9wYXJhbXNfZ2V0IEFjY3RCYWxhbmNlCglhc3NlcnQKCWJ5dGUgMHg2MTZjNjc2ZjU0NmY1NjZmNzQ2NTUyNjE3NDY5NmY2ZSAvLyAiYWxnb1RvVm90ZVJhdGlvbiIKCWFwcF9nbG9iYWxfZ2V0Cgk+PQoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL2NhbXBhaWduL2NhbXBhaWduLmFsZ28udHM6MzYxCgkvLyBzZW5kQXNzZXRUcmFuc2Zlcih7CgkvLyAgICAgICB4ZmVyQXNzZXQ6IHRoaXMudm90ZXJzQXNhSWQudmFsdWUsCgkvLyAgICAgICBhc3NldFJlY2VpdmVyOiB0aGlzLnR4bi5zZW5kZXIsCgkvLyAgICAgICBhc3NldEFtb3VudDogMSwKCS8vICAgICB9KQoJaXR4bl9iZWdpbgoJaW50IGF4ZmVyCglpdHhuX2ZpZWxkIFR5cGVFbnVtCgoJLy8gY29udHJhY3RzL2NhbXBhaWduL2NhbXBhaWduLmFsZ28udHM6MzYyCgkvLyB4ZmVyQXNzZXQ6IHRoaXMudm90ZXJzQXNhSWQudmFsdWUKCWJ5dGUgMHg3NjZmNzQ2NTcyNzM0MTczNjE0OTY0IC8vICJ2b3RlcnNBc2FJZCIKCWFwcF9nbG9iYWxfZ2V0CglpdHhuX2ZpZWxkIFhmZXJBc3NldAoKCS8vIGNvbnRyYWN0cy9jYW1wYWlnbi9jYW1wYWlnbi5hbGdvLnRzOjM2MwoJLy8gYXNzZXRSZWNlaXZlcjogdGhpcy50eG4uc2VuZGVyCgl0eG4gU2VuZGVyCglpdHhuX2ZpZWxkIEFzc2V0UmVjZWl2ZXIKCgkvLyBjb250cmFjdHMvY2FtcGFpZ24vY2FtcGFpZ24uYWxnby50czozNjQKCS8vIGFzc2V0QW1vdW50OiAxCglpbnQgMQoJaXR4bl9maWVsZCBBc3NldEFtb3VudAoKCS8vIEZlZSBmaWVsZCBub3Qgc2V0LCBkZWZhdWx0aW5nIHRvIDAKCWludCAwCglpdHhuX2ZpZWxkIEZlZQoKCS8vIFN1Ym1pdCBpbm5lciB0cmFuc2FjdGlvbgoJaXR4bl9zdWJtaXQKCgkvLyBjb250cmFjdHMvY2FtcGFpZ24vY2FtcGFpZ24uYWxnby50czozNjcKCS8vIHNlbmRBc3NldEZyZWV6ZSh7CgkvLyAgICAgICBmcmVlemVBc3NldDogdGhpcy52b3RlcnNBc2FJZC52YWx1ZSwKCS8vICAgICAgIGZyZWV6ZUFzc2V0QWNjb3VudDogdGhpcy50eG4uc2VuZGVyLAoJLy8gICAgICAgZnJlZXplQXNzZXRGcm96ZW46IHRydWUsCgkvLyAgICAgfSkKCWl0eG5fYmVnaW4KCWludCBhZnJ6CglpdHhuX2ZpZWxkIFR5cGVFbnVtCgoJLy8gY29udHJhY3RzL2NhbXBhaWduL2NhbXBhaWduLmFsZ28udHM6MzY4CgkvLyBmcmVlemVBc3NldDogdGhpcy52b3RlcnNBc2FJZC52YWx1ZQoJYnl0ZSAweDc2NmY3NDY1NzI3MzQxNzM2MTQ5NjQgLy8gInZvdGVyc0FzYUlkIgoJYXBwX2dsb2JhbF9nZXQKCWl0eG5fZmllbGQgRnJlZXplQXNzZXQKCgkvLyBjb250cmFjdHMvY2FtcGFpZ24vY2FtcGFpZ24uYWxnby50czozNjkKCS8vIGZyZWV6ZUFzc2V0QWNjb3VudDogdGhpcy50eG4uc2VuZGVyCgl0eG4gU2VuZGVyCglpdHhuX2ZpZWxkIEZyZWV6ZUFzc2V0QWNjb3VudAoKCS8vIGNvbnRyYWN0cy9jYW1wYWlnbi9jYW1wYWlnbi5hbGdvLnRzOjM3MAoJLy8gZnJlZXplQXNzZXRGcm96ZW46IHRydWUKCWludCAxCglpdHhuX2ZpZWxkIEZyZWV6ZUFzc2V0RnJvemVuCgoJLy8gRmVlIGZpZWxkIG5vdCBzZXQsIGRlZmF1bHRpbmcgdG8gMAoJaW50IDAKCWl0eG5fZmllbGQgRmVlCgoJLy8gU3VibWl0IGlubmVyIHRyYW5zYWN0aW9uCglpdHhuX3N1Ym1pdAoKCS8vIGNvbnRyYWN0cy9jYW1wYWlnbi9jYW1wYWlnbi5hbGdvLnRzOjM3MwoJLy8gdGhpcy50b3RhbFZvdGVzLnZhbHVlID0gdGhpcy50b3RhbFZvdGVzLnZhbHVlICsgMQoJYnl0ZSAweDc0NmY3NDYxNmM1NjZmNzQ2NTczIC8vICJ0b3RhbFZvdGVzIgoJYnl0ZSAweDc0NmY3NDYxNmM1NjZmNzQ2NTczIC8vICJ0b3RhbFZvdGVzIgoJYXBwX2dsb2JhbF9nZXQKCWludCAxCgkrCglhcHBfZ2xvYmFsX3B1dAoJcmV0c3ViCgovLyB1bnJlZ2lzdGVyQXNWb3Rlcihhc3NldCl2b2lkCi8vCi8vIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFycwphYmlfcm91dGVfdW5yZWdpc3RlckFzVm90ZXI6CgkvLyB2b3RlcnNBc2E6IGFzc2V0Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglidG9pCgl0eG5hcyBBc3NldHMKCgkvLyBleGVjdXRlIHVucmVnaXN0ZXJBc1ZvdGVyKGFzc2V0KXZvaWQKCWNhbGxzdWIgdW5yZWdpc3RlckFzVm90ZXIKCWludCAxCglyZXR1cm4KCnVucmVnaXN0ZXJBc1ZvdGVyOgoJcHJvdG8gMSAwCgoJLy8gY29udHJhY3RzL2NhbXBhaWduL2NhbXBhaWduLmFsZ28udHM6Mzc4CgkvLyBhc3NlcnQodGhpcy52b3RlcnNBc2FJZC5leGlzdHMpCgl0eG5hIEFwcGxpY2F0aW9ucyAwCglieXRlIDB4NzY2Zjc0NjU3MjczNDE3MzYxNDk2NCAvLyAidm90ZXJzQXNhSWQiCglhcHBfZ2xvYmFsX2dldF9leAoJc3dhcAoJcG9wCglhc3NlcnQKCgkvLyBjb250cmFjdHMvY2FtcGFpZ24vY2FtcGFpZ24uYWxnby50czozNzkKCS8vIGFzc2VydCh0aGlzLnR4bi5zZW5kZXIuaGFzQXNzZXQodGhpcy52b3RlcnNBc2FJZC52YWx1ZSkgPT09IDEpCgl0eG4gU2VuZGVyCglieXRlIDB4NzY2Zjc0NjU3MjczNDE3MzYxNDk2NCAvLyAidm90ZXJzQXNhSWQiCglhcHBfZ2xvYmFsX2dldAoJYXNzZXRfaG9sZGluZ19nZXQgQXNzZXRCYWxhbmNlCglzd2FwCglwb3AKCWludCAxCgk9PQoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL2NhbXBhaWduL2NhbXBhaWduLmFsZ28udHM6MzgxCgkvLyBzZW5kQXNzZXRGcmVlemUoewoJLy8gICAgICAgZnJlZXplQXNzZXQ6IHRoaXMudm90ZXJzQXNhSWQudmFsdWUsCgkvLyAgICAgICBmcmVlemVBc3NldEFjY291bnQ6IHRoaXMudHhuLnNlbmRlciwKCS8vICAgICAgIGZyZWV6ZUFzc2V0RnJvemVuOiBmYWxzZSwKCS8vICAgICB9KQoJaXR4bl9iZWdpbgoJaW50IGFmcnoKCWl0eG5fZmllbGQgVHlwZUVudW0KCgkvLyBjb250cmFjdHMvY2FtcGFpZ24vY2FtcGFpZ24uYWxnby50czozODIKCS8vIGZyZWV6ZUFzc2V0OiB0aGlzLnZvdGVyc0FzYUlkLnZhbHVlCglieXRlIDB4NzY2Zjc0NjU3MjczNDE3MzYxNDk2NCAvLyAidm90ZXJzQXNhSWQiCglhcHBfZ2xvYmFsX2dldAoJaXR4bl9maWVsZCBGcmVlemVBc3NldAoKCS8vIGNvbnRyYWN0cy9jYW1wYWlnbi9jYW1wYWlnbi5hbGdvLnRzOjM4MwoJLy8gZnJlZXplQXNzZXRBY2NvdW50OiB0aGlzLnR4bi5zZW5kZXIKCXR4biBTZW5kZXIKCWl0eG5fZmllbGQgRnJlZXplQXNzZXRBY2NvdW50CgoJLy8gY29udHJhY3RzL2NhbXBhaWduL2NhbXBhaWduLmFsZ28udHM6Mzg0CgkvLyBmcmVlemVBc3NldEZyb3plbjogZmFsc2UKCWludCAwCglpdHhuX2ZpZWxkIEZyZWV6ZUFzc2V0RnJvemVuCgoJLy8gRmVlIGZpZWxkIG5vdCBzZXQsIGRlZmF1bHRpbmcgdG8gMAoJaW50IDAKCWl0eG5fZmllbGQgRmVlCgoJLy8gU3VibWl0IGlubmVyIHRyYW5zYWN0aW9uCglpdHhuX3N1Ym1pdAoKCS8vIGNvbnRyYWN0cy9jYW1wYWlnbi9jYW1wYWlnbi5hbGdvLnRzOjM4NwoJLy8gc2VuZEFzc2V0VHJhbnNmZXIoewoJLy8gICAgICAgYXNzZXRTZW5kZXI6IHRoaXMudHhuLnNlbmRlciwKCS8vICAgICAgIHhmZXJBc3NldDogdGhpcy52b3RlcnNBc2FJZC52YWx1ZSwKCS8vICAgICAgIGFzc2V0UmVjZWl2ZXI6IHRoaXMuYXBwLmFkZHJlc3MsCgkvLyAgICAgICBhc3NldEFtb3VudDogMSwKCS8vICAgICB9KQoJaXR4bl9iZWdpbgoJaW50IGF4ZmVyCglpdHhuX2ZpZWxkIFR5cGVFbnVtCgoJLy8gY29udHJhY3RzL2NhbXBhaWduL2NhbXBhaWduLmFsZ28udHM6Mzg4CgkvLyBhc3NldFNlbmRlcjogdGhpcy50eG4uc2VuZGVyCgl0eG4gU2VuZGVyCglpdHhuX2ZpZWxkIEFzc2V0U2VuZGVyCgoJLy8gY29udHJhY3RzL2NhbXBhaWduL2NhbXBhaWduLmFsZ28udHM6Mzg5CgkvLyB4ZmVyQXNzZXQ6IHRoaXMudm90ZXJzQXNhSWQudmFsdWUKCWJ5dGUgMHg3NjZmNzQ2NTcyNzM0MTczNjE0OTY0IC8vICJ2b3RlcnNBc2FJZCIKCWFwcF9nbG9iYWxfZ2V0CglpdHhuX2ZpZWxkIFhmZXJBc3NldAoKCS8vIGNvbnRyYWN0cy9jYW1wYWlnbi9jYW1wYWlnbi5hbGdvLnRzOjM5MAoJLy8gYXNzZXRSZWNlaXZlcjogdGhpcy5hcHAuYWRkcmVzcwoJZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKCWl0eG5fZmllbGQgQXNzZXRSZWNlaXZlcgoKCS8vIGNvbnRyYWN0cy9jYW1wYWlnbi9jYW1wYWlnbi5hbGdvLnRzOjM5MQoJLy8gYXNzZXRBbW91bnQ6IDEKCWludCAxCglpdHhuX2ZpZWxkIEFzc2V0QW1vdW50CgoJLy8gRmVlIGZpZWxkIG5vdCBzZXQsIGRlZmF1bHRpbmcgdG8gMAoJaW50IDAKCWl0eG5fZmllbGQgRmVlCgoJLy8gU3VibWl0IGlubmVyIHRyYW5zYWN0aW9uCglpdHhuX3N1Ym1pdAoKCS8vIGNvbnRyYWN0cy9jYW1wYWlnbi9jYW1wYWlnbi5hbGdvLnRzOjM5NAoJLy8gdGhpcy50b3RhbFZvdGVzLnZhbHVlID0gdGhpcy50b3RhbFZvdGVzLnZhbHVlIC0gMQoJYnl0ZSAweDc0NmY3NDYxNmM1NjZmNzQ2NTczIC8vICJ0b3RhbFZvdGVzIgoJYnl0ZSAweDc0NmY3NDYxNmM1NjZmNzQ2NTczIC8vICJ0b3RhbFZvdGVzIgoJYXBwX2dsb2JhbF9nZXQKCWludCAxCgktCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9jYW1wYWlnbi9jYW1wYWlnbi5hbGdvLnRzOjM5NQoJLy8gdGhpcy52aXBWb3RlcnModGhpcy50eG4uc2VuZGVyKS52YWx1ZSA9IGZhbHNlCgl0eG4gU2VuZGVyCglpbnQgMAoJYnl0ZSAweDAwCglpbnQgMAoJdW5jb3ZlciAyCglzZXRiaXQKCWFwcF9nbG9iYWxfcHV0CglyZXRzdWIKCi8vID09PT09PT09PT09PT09PT09PT09PT09PQovLyA9PT09IEdldHRlciBNZXRob2RzID09PT0KLy8gPT09PT09PT09PT09PT09PT09PT09PT09Ci8vIGdldEFsbENhbXBhaWduQXBwcygpYXBwbGljYXRpb25bXQovLwovLyAvLy8gPT09PT09PT09PT09PT09PT09PT09PT09CmFiaV9yb3V0ZV9nZXRBbGxDYW1wYWlnbkFwcHM6CgkvLyBleGVjdXRlIGdldEFsbENhbXBhaWduQXBwcygpYXBwbGljYXRpb25bXQoJY2FsbHN1YiBnZXRBbGxDYW1wYWlnbkFwcHMKCWludCAxCglyZXR1cm4KCmdldEFsbENhbXBhaWduQXBwczoKCXByb3RvIDAgMAoKCS8vIGNvbnRyYWN0cy9jYW1wYWlnbi9jYW1wYWlnbi5hbGdvLnRzOjQwMgoJLy8gcmV0dXJuIHRoaXMuYWxnb2h1YkNhbXBhaWducy5leGlzdHMgPyB0aGlzLmFsZ29odWJDYW1wYWlnbnMudmFsdWUgOiBbXTsKCXR4bmEgQXBwbGljYXRpb25zIDAKCWJ5dGUgMHg2MTZjNjc2ZjY4NzU2MjQzNjE2ZDcwNjE2OTY3NmU3MyAvLyAiYWxnb2h1YkNhbXBhaWducyIKCWFwcF9nbG9iYWxfZ2V0X2V4Cglzd2FwCglwb3AKCWJ6IHRlcm5hcnkwX2ZhbHNlCglieXRlIDB4NjE2YzY3NmY2ODc1NjI0MzYxNmQ3MDYxNjk2NzZlNzMgLy8gImFsZ29odWJDYW1wYWlnbnMiCglhcHBfZ2xvYmFsX2dldAoJZXh0cmFjdCAyIDAKCWIgdGVybmFyeTBfZW5kCgp0ZXJuYXJ5MF9mYWxzZToKCWJ5dGUgMHgKCnRlcm5hcnkwX2VuZDoKCWR1cAoJbGVuCglpbnQgOAoJLwoJaXRvYgoJZXh0cmFjdCA2IDIKCXN3YXAKCWNvbmNhdAoJYnl0ZSAweDE1MWY3Yzc1Cglzd2FwCgljb25jYXQKCWxvZwoJcmV0c3ViCgovLyBnZXRWb3RlcnNEZXRhaWxzKCkodWludDY0LHVpbnQ2NCx1aW50NjQpCmFiaV9yb3V0ZV9nZXRWb3RlcnNEZXRhaWxzOgoJLy8gZXhlY3V0ZSBnZXRWb3RlcnNEZXRhaWxzKCkodWludDY0LHVpbnQ2NCx1aW50NjQpCgljYWxsc3ViIGdldFZvdGVyc0RldGFpbHMKCWludCAxCglyZXR1cm4KCmdldFZvdGVyc0RldGFpbHM6Cglwcm90byAwIDAKCgkvLyBjb250cmFjdHMvY2FtcGFpZ24vY2FtcGFpZ24uYWxnby50czo0MDYKCS8vIHJldHVybiB7CgkvLyAgICAgICBhbGdvVG9Wb3RlUmF0aW9uOiB0aGlzLmFsZ29Ub1ZvdGVSYXRpb24udmFsdWUsCgkvLyAgICAgICB2aXBWb3RlV2VpZ2h0OiB0aGlzLnZpcFZvdGVXZWlnaHQudmFsdWUsCgkvLyAgICAgICB0b3RhbFZvdGVzOiB0aGlzLnRvdGFsVm90ZXMudmFsdWUsCgkvLyAgICAgfTsKCWJ5dGUgMHg2MTZjNjc2ZjU0NmY1NjZmNzQ2NTUyNjE3NDY5NmY2ZSAvLyAiYWxnb1RvVm90ZVJhdGlvbiIKCWFwcF9nbG9iYWxfZ2V0CglpdG9iCglieXRlIDB4NzY2OTcwNTY2Zjc0NjU1NzY1Njk2NzY4NzQgLy8gInZpcFZvdGVXZWlnaHQiCglhcHBfZ2xvYmFsX2dldAoJaXRvYgoJY29uY2F0CglieXRlIDB4NzQ2Zjc0NjE2YzU2NmY3NDY1NzMgLy8gInRvdGFsVm90ZXMiCglhcHBfZ2xvYmFsX2dldAoJaXRvYgoJY29uY2F0CglieXRlIDB4MTUxZjdjNzUKCXN3YXAKCWNvbmNhdAoJbG9nCglyZXRzdWIKCi8vIGdldFZvdGVQb3dlcihhc3NldCxhY2NvdW50KXVpbnQ2NAovLwovLyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnMKYWJpX3JvdXRlX2dldFZvdGVQb3dlcjoKCS8vIHZvdGVyc0FzYTogYXNzZXQKCXR4bmEgQXBwbGljYXRpb25BcmdzIDIKCWJ0b2kKCXR4bmFzIEFzc2V0cwoKCS8vIGFjY291bnQ6IGFjY291bnQKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWJ0b2kKCXR4bmFzIEFjY291bnRzCgoJLy8gZXhlY3V0ZSBnZXRWb3RlUG93ZXIoYXNzZXQsYWNjb3VudCl1aW50NjQKCWNhbGxzdWIgZ2V0Vm90ZVBvd2VyCglpbnQgMQoJcmV0dXJuCgpnZXRWb3RlUG93ZXI6Cglwcm90byAyIDAKCgkvLyBpZjFfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvY2FtcGFpZ24vY2FtcGFpZ24uYWxnby50czo0MTUKCS8vIGFjY291bnQuaGFzQXNzZXQodGhpcy52b3RlcnNBc2FJZC52YWx1ZSkgPT09IDAKCWZyYW1lX2RpZyAtMSAvLyBhY2NvdW50OiBhY2NvdW50CglieXRlIDB4NzY2Zjc0NjU3MjczNDE3MzYxNDk2NCAvLyAidm90ZXJzQXNhSWQiCglhcHBfZ2xvYmFsX2dldAoJYXNzZXRfaG9sZGluZ19nZXQgQXNzZXRCYWxhbmNlCglzd2FwCglwb3AKCWludCAwCgk9PQoJYnogaWYxX2VuZAoKCS8vIGlmMV9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvY2FtcGFpZ24vY2FtcGFpZ24uYWxnby50czo0MTUKCS8vIHJldHVybiAwOwoJYnl0ZSAweDE1MWY3Yzc1MDAwMDAwMDAwMDAwMDAwMAoJbG9nCglyZXRzdWIKCmlmMV9lbmQ6CgkvLyBpZjJfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvY2FtcGFpZ24vY2FtcGFpZ24uYWxnby50czo0MTYKCS8vIHRoaXMudmlwVm90ZXJzKGFjY291bnQpLnZhbHVlCglmcmFtZV9kaWcgLTEgLy8gYWNjb3VudDogYWNjb3VudAoJYXBwX2dsb2JhbF9nZXQKCWludCAwCglnZXRiaXQKCWJ6IGlmMl9lbmQKCgkvLyBpZjJfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL2NhbXBhaWduL2NhbXBhaWduLmFsZ28udHM6NDE2CgkvLyByZXR1cm4gMTI1OwoJYnl0ZSAweDE1MWY3Yzc1MDAwMDAwMDAwMDAwMDA3ZAoJbG9nCglyZXRzdWIKCmlmMl9lbmQ6CgkvLyBjb250cmFjdHMvY2FtcGFpZ24vY2FtcGFpZ24uYWxnby50czo0MTcKCS8vIHJldHVybiAxMDA7CglieXRlIDB4MTUxZjdjNzUwMDAwMDAwMDAwMDAwMDY0Cglsb2cKCXJldHN1YgoKLy8gZ2V0Vm90aW5nUGVyaW9kKCl1aW50NjQKYWJpX3JvdXRlX2dldFZvdGluZ1BlcmlvZDoKCS8vIGV4ZWN1dGUgZ2V0Vm90aW5nUGVyaW9kKCl1aW50NjQKCWNhbGxzdWIgZ2V0Vm90aW5nUGVyaW9kCglpbnQgMQoJcmV0dXJuCgpnZXRWb3RpbmdQZXJpb2Q6Cglwcm90byAwIDAKCgkvLyBjb250cmFjdHMvY2FtcGFpZ24vY2FtcGFpZ24uYWxnby50czo0MjEKCS8vIHJldHVybiB0aGlzLnZvdGluZ1BlcmlvZC52YWx1ZTsKCWJ5dGUgMHg3NjZmNzQ2OTZlNjc1MDY1NzI2OTZmNjQgLy8gInZvdGluZ1BlcmlvZCIKCWFwcF9nbG9iYWxfZ2V0CglpdG9iCglieXRlIDB4MTUxZjdjNzUKCXN3YXAKCWNvbmNhdAoJbG9nCglyZXRzdWIKCi8vIGdldFRvdGFsVm90ZXJzKCl1aW50NjQKYWJpX3JvdXRlX2dldFRvdGFsVm90ZXJzOgoJLy8gZXhlY3V0ZSBnZXRUb3RhbFZvdGVycygpdWludDY0CgljYWxsc3ViIGdldFRvdGFsVm90ZXJzCglpbnQgMQoJcmV0dXJuCgpnZXRUb3RhbFZvdGVyczoKCXByb3RvIDAgMAoKCS8vIGNvbnRyYWN0cy9jYW1wYWlnbi9jYW1wYWlnbi5hbGdvLnRzOjQyNQoJLy8gcmV0dXJuIHRoaXMudG90YWxWb3Rlcy52YWx1ZTsKCWJ5dGUgMHg3NDZmNzQ2MTZjNTY2Zjc0NjU3MyAvLyAidG90YWxWb3RlcyIKCWFwcF9nbG9iYWxfZ2V0CglpdG9iCglieXRlIDB4MTUxZjdjNzUKCXN3YXAKCWNvbmNhdAoJbG9nCglyZXRzdWIKCi8vIGdldFZpcFN0YXR1cyhhY2NvdW50KWJvb2wKYWJpX3JvdXRlX2dldFZpcFN0YXR1czoKCS8vIGFjY291bnQ6IGFjY291bnQKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWJ0b2kKCXR4bmFzIEFjY291bnRzCgoJLy8gZXhlY3V0ZSBnZXRWaXBTdGF0dXMoYWNjb3VudClib29sCgljYWxsc3ViIGdldFZpcFN0YXR1cwoJaW50IDEKCXJldHVybgoKZ2V0VmlwU3RhdHVzOgoJcHJvdG8gMSAwCgoJLy8gY29udHJhY3RzL2NhbXBhaWduL2NhbXBhaWduLmFsZ28udHM6NDI5CgkvLyByZXR1cm4gdGhpcy52aXBWb3RlcnMoYWNjb3VudCkudmFsdWU7CglmcmFtZV9kaWcgLTEgLy8gYWNjb3VudDogYWNjb3VudAoJYXBwX2dsb2JhbF9nZXQKCWludCAwCglnZXRiaXQKCWJ5dGUgMHgwMAoJaW50IDAKCXVuY292ZXIgMgoJc2V0Yml0CglieXRlIDB4MTUxZjdjNzUKCXN3YXAKCWNvbmNhdAoJbG9nCglyZXRzdWIKCmNyZWF0ZV9Ob09wOgoJbWV0aG9kICJjcmVhdGVBcHBsaWNhdGlvbih1aW50NjQsdWludDY0LHVpbnQ2NCl2b2lkIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uCgllcnIKCmNhbGxfTm9PcDoKCW1ldGhvZCAiYm9vdHN0cmFwKHVpbnQ2NCl1aW50NjQiCgltZXRob2QgInNldFZpcFN0YXR1cyhhY2NvdW50LGJvb2wsYXNzZXQpdm9pZCIKCW1ldGhvZCAiY3JlYXRlQ2FtcGFpZ24oYXNzZXQsYWNjb3VudCxhc3NldCxhc3NldCx1aW50NjQsdWludDY0LHVpbnQ2NCx1aW50NjQsdWludDY0LHN0cmluZyl1aW50NjQiCgltZXRob2QgInJlZ2lzdGVyQXNWb3Rlcihhc3NldCl2b2lkIgoJbWV0aG9kICJ1bnJlZ2lzdGVyQXNWb3Rlcihhc3NldCl2b2lkIgoJbWV0aG9kICJnZXRBbGxDYW1wYWlnbkFwcHMoKXVpbnQ2NFtdIgoJbWV0aG9kICJnZXRWb3RlcnNEZXRhaWxzKCkodWludDY0LHVpbnQ2NCx1aW50NjQpIgoJbWV0aG9kICJnZXRWb3RlUG93ZXIoYWNjb3VudCxhc3NldCl1aW50NjQiCgltZXRob2QgImdldFZvdGluZ1BlcmlvZCgpdWludDY0IgoJbWV0aG9kICJnZXRUb3RhbFZvdGVycygpdWludDY0IgoJbWV0aG9kICJnZXRWaXBTdGF0dXMoYWNjb3VudClib29sIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggYWJpX3JvdXRlX2Jvb3RzdHJhcCBhYmlfcm91dGVfc2V0VmlwU3RhdHVzIGFiaV9yb3V0ZV9jcmVhdGVDYW1wYWlnbiBhYmlfcm91dGVfcmVnaXN0ZXJBc1ZvdGVyIGFiaV9yb3V0ZV91bnJlZ2lzdGVyQXNWb3RlciBhYmlfcm91dGVfZ2V0QWxsQ2FtcGFpZ25BcHBzIGFiaV9yb3V0ZV9nZXRWb3RlcnNEZXRhaWxzIGFiaV9yb3V0ZV9nZXRWb3RlUG93ZXIgYWJpX3JvdXRlX2dldFZvdGluZ1BlcmlvZCBhYmlfcm91dGVfZ2V0VG90YWxWb3RlcnMgYWJpX3JvdXRlX2dldFZpcFN0YXR1cwoJZXJy",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDk="
  },
  "contract": {
    "name": "AlgohubMaster",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "args": [
          {
            "name": "algoToVoteRatio",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "vipVoteWeight",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "votingPeriod",
            "type": "uint64",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "bootstrap",
        "args": [
          {
            "name": "voteAsaTotal",
            "type": "uint64",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      },
      {
        "name": "setVipStatus",
        "args": [
          {
            "name": "account",
            "type": "account",
            "desc": ""
          },
          {
            "name": "isVip",
            "type": "bool",
            "desc": ""
          },
          {
            "name": "votersAsa",
            "type": "asset",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "createCampaign",
        "args": [
          {
            "name": "votersAsa",
            "type": "asset",
            "desc": ""
          },
          {
            "name": "adminAccount",
            "type": "account",
            "desc": ""
          },
          {
            "name": "idoAsa",
            "type": "asset",
            "desc": ""
          },
          {
            "name": "buyAsa",
            "type": "asset",
            "desc": ""
          },
          {
            "name": "price",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "maxBuyCap",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "softCap",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "hardCap",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "duration",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "metadataUrl",
            "type": "string",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      },
      {
        "name": "registerAsVoter",
        "args": [
          {
            "name": "votersAsa",
            "type": "asset",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "unregisterAsVoter",
        "args": [
          {
            "name": "votersAsa",
            "type": "asset",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "getAllCampaignApps",
        "args": [],
        "desc": "",
        "returns": {
          "type": "uint64[]",
          "desc": ""
        }
      },
      {
        "name": "getVotersDetails",
        "args": [],
        "desc": "",
        "returns": {
          "type": "(uint64,uint64,uint64)",
          "desc": ""
        }
      },
      {
        "name": "getVotePower",
        "args": [
          {
            "name": "account",
            "type": "account",
            "desc": ""
          },
          {
            "name": "votersAsa",
            "type": "asset",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      },
      {
        "name": "getVotingPeriod",
        "args": [],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      },
      {
        "name": "getTotalVoters",
        "args": [],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      },
      {
        "name": "getVipStatus",
        "args": [
          {
            "name": "account",
            "type": "account",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "bool",
          "desc": ""
        }
      }
    ]
  }
}
{
  "hints": {
    "createApplication(application)void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "createCampaign(account,asset,asset,asset,uint64,uint64,uint64,uint64,uint64,uint64,string)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "setVestingSchedule(uint64[],uint64[])void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "depositIdoAsa(axfer,asset)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "lockApprovedStatus()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "invest(axfer,asset,uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "claim(asset)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "withdrawInvestment(asset)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "withdrawIdoAsa(asset)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "withdrawSales(asset)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "vote(bool,asset)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getAccountTotalPurchases(account)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getVotes()(uint64,uint64)": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getVotersAsa()uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getIdoAsa()uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getInvestmentAsa()uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getCampaign()(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,string)": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getVestingSchedule()(uint64,uint64[],uint64[])": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "algohub": {
          "type": "uint64",
          "key": "algohub"
        },
        "admin": {
          "type": "bytes",
          "key": "admin"
        },
        "idoAsaId": {
          "type": "uint64",
          "key": "idoAsaId"
        },
        "investmentAsaId": {
          "type": "uint64",
          "key": "investmentAsaId"
        },
        "votersAsaId": {
          "type": "uint64",
          "key": "votersAsaId"
        },
        "campaign": {
          "type": "bytes",
          "key": "campaign"
        },
        "vestingSchedule": {
          "type": "bytes",
          "key": "vestingSchedule"
        },
        "isApprovedCampaign": {
          "type": "bytes",
          "key": "isApprovedCampaign"
        },
        "votesTotal": {
          "type": "uint64",
          "key": "votesTotal"
        },
        "votesInFavor": {
          "type": "uint64",
          "key": "votesInFavor"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 4,
      "num_uints": 6
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDk="
  },
  "contract": {
    "name": "Campaign",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "args": [
          {
            "name": "algohubApp",
            "type": "application",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "createCampaign",
        "args": [
          {
            "name": "adminAccount",
            "type": "account",
            "desc": ""
          },
          {
            "name": "votersAsa",
            "type": "asset",
            "desc": ""
          },
          {
            "name": "idoAsa",
            "type": "asset",
            "desc": ""
          },
          {
            "name": "investmentAsa",
            "type": "asset",
            "desc": ""
          },
          {
            "name": "conversionRate",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "maxInvestmentPerAccount",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "minTotalInvestment",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "maxTotalInvestment",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "votingPeriod",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "duration",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "metadataUrl",
            "type": "string",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "setVestingSchedule",
        "args": [
          {
            "name": "vestingPercentages",
            "type": "uint64[]",
            "desc": ""
          },
          {
            "name": "vestingDurations",
            "type": "uint64[]",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "depositIdoAsa",
        "args": [
          {
            "name": "idoXfer",
            "type": "axfer",
            "desc": ""
          },
          {
            "name": "idoAsa",
            "type": "asset",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "lockApprovedStatus",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "invest",
        "args": [
          {
            "name": "investmentAsaXfer",
            "type": "axfer",
            "desc": ""
          },
          {
            "name": "investmentAsa",
            "type": "asset",
            "desc": ""
          },
          {
            "name": "investmentAmount",
            "type": "uint64",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "claim",
        "args": [
          {
            "name": "idoAsa",
            "type": "asset",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "withdrawInvestment",
        "args": [
          {
            "name": "investmentAsa",
            "type": "asset",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "withdrawIdoAsa",
        "args": [
          {
            "name": "idoAsa",
            "type": "asset",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "withdrawSales",
        "args": [
          {
            "name": "investmentAsa",
            "type": "asset",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "vote",
        "args": [
          {
            "name": "inFavor",
            "type": "bool",
            "desc": ""
          },
          {
            "name": "votersAsa",
            "type": "asset",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "getAccountTotalPurchases",
        "args": [
          {
            "name": "account",
            "type": "account",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      },
      {
        "name": "getVotes",
        "args": [],
        "desc": "",
        "returns": {
          "type": "(uint64,uint64)",
          "desc": ""
        }
      },
      {
        "name": "getVotersAsa",
        "args": [],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      },
      {
        "name": "getIdoAsa",
        "args": [],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      },
      {
        "name": "getInvestmentAsa",
        "args": [],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      },
      {
        "name": "getCampaign",
        "args": [],
        "desc": "",
        "returns": {
          "type": "(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,string)",
          "desc": ""
        }
      },
      {
        "name": "getVestingSchedule",
        "args": [],
        "desc": "",
        "returns": {
          "type": "(uint64,uint64[],uint64[])",
          "desc": ""
        }
      }
    ]
  }
}
#pragma version 9

// This TEAL was generated by TEALScript v0.61.0
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implmented in the contract, its repsective branch will be "NOT_IMPLMENTED" which just contains "err"
txn ApplicationID
int 0
>
int 6
*
txn OnCompletion
+
switch create_NoOp NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED call_NoOp

NOT_IMPLEMENTED:
	err

// createApplication()void
//
// // eslint-disable-next-line no-unused-vars
abi_route_createApplication:
	// execute createApplication()void
	callsub createApplication
	int 1
	return

createApplication:
	proto 0 0

	// contracts/campaign/campaign.algo.ts:56
	// this.votersAsaId.value = Asset.zeroIndex
	byte 0x766f746572734173614964 // "votersAsaId"
	int 0
	app_global_put

	// contracts/campaign/campaign.algo.ts:57
	// this.idoAsaId.value = Asset.zeroIndex
	byte 0x69646f4173614964 // "idoAsaId"
	int 0
	app_global_put

	// contracts/campaign/campaign.algo.ts:58
	// this.buyAsaId.value = Asset.zeroIndex
	byte 0x6275794173614964 // "buyAsaId"
	int 0
	app_global_put

	// contracts/campaign/campaign.algo.ts:59
	// this.isApprovedCampaign.value = false
	byte 0x6973417070726f76656443616d706169676e // "isApprovedCampaign"
	int 0
	byte 0x00
	int 0
	uncover 2
	setbit
	app_global_put
	retsub

// ========================
// ==== Private Methods ===
// ========================
isApproved:
	proto 0 1

	// if0_condition
	// contracts/campaign/campaign.algo.ts:66
	// !this.isApprovedCampaign.value
	byte 0x6973417070726f76656443616d706169676e // "isApprovedCampaign"
	app_global_get
	int 0
	getbit
	!
	bz if0_end

	// if0_consequent
	// contracts/campaign/campaign.algo.ts:68
	// return true;
	int 1
	retsub

if0_end:
	// contracts/campaign/campaign.algo.ts:70
	// return this.isApprovedCampaign.value;
	byte 0x6973417070726f76656443616d706169676e // "isApprovedCampaign"
	app_global_get
	int 0
	getbit
	retsub

isHypelisted:
	proto 0 1

	// contracts/campaign/campaign.algo.ts:75
	// return true;
	int 1
	retsub

optInToAsa:
	proto 1 0

	// contracts/campaign/campaign.algo.ts:79
	// sendAssetTransfer({
	//       assetReceiver: this.app.address,
	//       xferAsset: asaToOptIn,
	//       assetAmount: 0,
	//     })
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// contracts/campaign/campaign.algo.ts:80
	// assetReceiver: this.app.address
	global CurrentApplicationAddress
	itxn_field AssetReceiver

	// contracts/campaign/campaign.algo.ts:81
	// xferAsset: asaToOptIn
	frame_dig -1 // asaToOptIn: asset
	itxn_field XferAsset

	// contracts/campaign/campaign.algo.ts:82
	// assetAmount: 0
	int 0
	itxn_field AssetAmount

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

// createCampaign(string,uint64,uint64,uint64,uint64,uint64,uint64,asset,asset,asset,account)void
abi_route_createCampaign:
	// metadataUrl: string
	txna ApplicationArgs 11
	extract 2 0

	// duration: uint64
	txna ApplicationArgs 10
	btoi

	// votingPeriod: uint64
	txna ApplicationArgs 9
	btoi

	// hardCap: uint64
	txna ApplicationArgs 8
	btoi

	// softCap: uint64
	txna ApplicationArgs 7
	btoi

	// maxBuyCap: uint64
	txna ApplicationArgs 6
	btoi

	// price: uint64
	txna ApplicationArgs 5
	btoi

	// buyAsa: asset
	txna ApplicationArgs 4
	btoi
	txnas Assets

	// idoAsa: asset
	txna ApplicationArgs 3
	btoi
	txnas Assets

	// votersAsa: asset
	txna ApplicationArgs 2
	btoi
	txnas Assets

	// adminAccount: account
	txna ApplicationArgs 1
	btoi
	txnas Accounts

	// execute createCampaign(string,uint64,uint64,uint64,uint64,uint64,uint64,asset,asset,asset,account)void
	callsub createCampaign
	int 1
	return

createCampaign:
	proto 11 0

	// contracts/campaign/campaign.algo.ts:100
	// assert(!this.campaign.exists)
	txna Applications 0
	byte 0x63616d706169676e // "campaign"
	app_global_get_ex
	swap
	pop
	!
	assert

	// contracts/campaign/campaign.algo.ts:101
	// this.admin.value = adminAccount
	byte 0x61646d696e // "admin"
	frame_dig -1 // adminAccount: account
	app_global_put

	// contracts/campaign/campaign.algo.ts:102
	// this.votersAsaId.value = votersAsa
	byte 0x766f746572734173614964 // "votersAsaId"
	frame_dig -2 // votersAsa: asset
	app_global_put

	// contracts/campaign/campaign.algo.ts:103
	// this.idoAsaId.value = idoAsa
	byte 0x69646f4173614964 // "idoAsaId"
	frame_dig -3 // idoAsa: asset
	app_global_put

	// contracts/campaign/campaign.algo.ts:104
	// this.buyAsaId.value = buyAsa
	byte 0x6275794173614964 // "buyAsaId"
	frame_dig -4 // buyAsa: asset
	app_global_put

	// contracts/campaign/campaign.algo.ts:105
	// this.campaign.value = {
	//       price: price,
	//       maxBuyCap: maxBuyCap,
	//       softCap: softCap,
	//       hardCap: hardCap,
	//       purchasedAmount: 0,
	//       startTime: globals.latestTimestamp + votingPeriod,
	//       endTime: globals.latestTimestamp + votingPeriod + duration,
	//       metadataUrl: metadataUrl,
	//     }
	byte 0x63616d706169676e // "campaign"
	byte 0x // initial head
	byte 0x // initial tail
	byte 0x003a // initial head offset
	frame_dig -5 // price: uint64
	itob
	callsub process_static_tuple_element
	frame_dig -6 // maxBuyCap: uint64
	itob
	callsub process_static_tuple_element
	frame_dig -7 // softCap: uint64
	itob
	callsub process_static_tuple_element
	frame_dig -8 // hardCap: uint64
	itob
	callsub process_static_tuple_element
	byte 0x0000000000000000
	callsub process_static_tuple_element
	global LatestTimestamp
	frame_dig -9 // votingPeriod: uint64
	+
	itob
	callsub process_static_tuple_element
	global LatestTimestamp
	frame_dig -9 // votingPeriod: uint64
	+
	frame_dig -10 // duration: uint64
	+
	itob
	callsub process_static_tuple_element
	frame_dig -11 // metadataUrl: bytes
	dup
	len
	itob
	extract 6 2
	swap
	concat
	callsub process_dynamic_tuple_element
	pop // pop head offset
	concat // concat head and tail
	app_global_put

	// contracts/campaign/campaign.algo.ts:116
	// this.optInToAsa(idoAsa)
	frame_dig -3 // idoAsa: asset
	callsub optInToAsa

	// contracts/campaign/campaign.algo.ts:117
	// this.optInToAsa(buyAsa)
	frame_dig -4 // buyAsa: asset
	callsub optInToAsa
	retsub

// depositIdoAsa(asset,axfer)void
abi_route_depositIdoAsa:
	byte 0x // push empty bytes to fill the stack frame for this subroutine's local variables

	// idoAsa: asset
	txna ApplicationArgs 1
	btoi
	txnas Assets

	// idoXfer: axfer
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int axfer
	==
	assert

	// execute depositIdoAsa(asset,axfer)void
	callsub depositIdoAsa
	int 1
	return

depositIdoAsa:
	proto 3 0

	// contracts/campaign/campaign.algo.ts:126
	// assert(this.campaign.exists)
	txna Applications 0
	byte 0x63616d706169676e // "campaign"
	app_global_get_ex
	swap
	pop
	assert

	// contracts/campaign/campaign.algo.ts:127
	// verifyTxn(this.txn, { sender: this.admin.value })
	// verify sender
	txn Sender
	byte 0x61646d696e // "admin"
	app_global_get
	==
	assert

	// contracts/campaign/campaign.algo.ts:128
	// idoAsaToTransfer = this.campaign.value.hardCap / this.campaign.value.price
	byte 0x63616d706169676e // "campaign"
	app_global_get
	store 0 // full array
	load 0 // full array
	extract 24 8
	btoi
	byte 0x63616d706169676e // "campaign"
	app_global_get
	store 0 // full array
	load 0 // full array
	extract 0 8
	btoi
	/
	frame_bury -3 // idoAsaToTransfer: uint64

	// contracts/campaign/campaign.algo.ts:129
	// verifyTxn(idoXfer, {
	//       assetAmount: idoAsaToTransfer,
	//       assetReceiver: this.app.address,
	//       sender: this.txn.sender,
	//       xferAsset: idoAsa,
	//     })
	// verify assetAmount
	frame_dig -1 // idoXfer: axfer
	gtxns AssetAmount
	frame_dig -3 // idoAsaToTransfer: uint64
	==
	assert

	// verify assetReceiver
	frame_dig -1 // idoXfer: axfer
	gtxns AssetReceiver
	global CurrentApplicationAddress
	==
	assert

	// verify sender
	frame_dig -1 // idoXfer: axfer
	gtxns Sender
	txn Sender
	==
	assert

	// verify xferAsset
	frame_dig -1 // idoXfer: axfer
	gtxns XferAsset
	frame_dig -2 // idoAsa: asset
	==
	assert
	retsub

// buy(uint64,asset,axfer)void
//
// // eslint-disable-next-line no-unused-vars
abi_route_buy:
	byte 0x // push empty bytes to fill the stack frame for this subroutine's local variables

	// buyAmount: uint64
	txna ApplicationArgs 2
	btoi

	// buyAsa: asset
	txna ApplicationArgs 1
	btoi
	txnas Assets

	// buyAsaXfer: axfer
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int axfer
	==
	assert

	// execute buy(uint64,asset,axfer)void
	callsub buy
	int 1
	return

buy:
	proto 4 0

	// contracts/campaign/campaign.algo.ts:140
	// assert(this.campaign.exists)
	txna Applications 0
	byte 0x63616d706169676e // "campaign"
	app_global_get_ex
	swap
	pop
	assert

	// contracts/campaign/campaign.algo.ts:141
	// assert(this.isApproved())
	callsub isApproved
	assert

	// if1_condition
	// contracts/campaign/campaign.algo.ts:145
	// !this.isApprovedCampaign.value
	byte 0x6973417070726f76656443616d706169676e // "isApprovedCampaign"
	app_global_get
	int 0
	getbit
	!
	bz if1_end

	// if1_consequent
	// contracts/campaign/campaign.algo.ts:146
	// this.isApprovedCampaign.value = true
	byte 0x6973417070726f76656443616d706169676e // "isApprovedCampaign"
	int 1
	byte 0x00
	int 0
	uncover 2
	setbit
	app_global_put

if1_end:
	// contracts/campaign/campaign.algo.ts:149
	// buyAsaToTransfer = buyAmount * this.campaign.value.price
	frame_dig -3 // buyAmount: uint64
	byte 0x63616d706169676e // "campaign"
	app_global_get
	store 0 // full array
	load 0 // full array
	extract 0 8
	btoi
	*
	frame_bury -4 // buyAsaToTransfer: uint64

	// contracts/campaign/campaign.algo.ts:151
	// verifyTxn(buyAsaXfer, {
	//       assetAmount: buyAsaToTransfer,
	//       assetReceiver: this.app.address,
	//       sender: this.txn.sender,
	//       xferAsset: buyAsa,
	//     })
	// verify assetAmount
	frame_dig -1 // buyAsaXfer: axfer
	gtxns AssetAmount
	frame_dig -4 // buyAsaToTransfer: uint64
	==
	assert

	// verify assetReceiver
	frame_dig -1 // buyAsaXfer: axfer
	gtxns AssetReceiver
	global CurrentApplicationAddress
	==
	assert

	// verify sender
	frame_dig -1 // buyAsaXfer: axfer
	gtxns Sender
	txn Sender
	==
	assert

	// verify xferAsset
	frame_dig -1 // buyAsaXfer: axfer
	gtxns XferAsset
	frame_dig -2 // buyAsa: asset
	==
	assert

	// if2_condition
	// contracts/campaign/campaign.algo.ts:158
	// this.purchases(this.txn.sender).exists
	byte 0x70 // "p"
	txn Sender
	concat
	box_len
	swap
	pop
	bz if2_else

	// if2_consequent
	// contracts/campaign/campaign.algo.ts:159
	// this.purchases(this.txn.sender).value = this.purchases(this.txn.sender).value + buyAmount
	byte 0x70 // "p"
	txn Sender
	concat
	byte 0x70 // "p"
	txn Sender
	concat
	box_get
	assert
	btoi
	frame_dig -3 // buyAmount: uint64
	+
	itob
	box_put
	b if2_end

if2_else:
	// contracts/campaign/campaign.algo.ts:161
	// this.purchases(this.txn.sender).value = buyAmount
	byte 0x70 // "p"
	txn Sender
	concat
	frame_dig -3 // buyAmount: uint64
	itob
	box_put

if2_end:
	retsub

// claim(asset)void
abi_route_claim:
	byte 0x // push empty bytes to fill the stack frame for this subroutine's local variables

	// idoAsa: asset
	txna ApplicationArgs 1
	btoi
	txnas Assets

	// execute claim(asset)void
	callsub claim
	int 1
	return

claim:
	proto 2 0

	// contracts/campaign/campaign.algo.ts:167
	// assert(this.campaign.exists)
	txna Applications 0
	byte 0x63616d706169676e // "campaign"
	app_global_get_ex
	swap
	pop
	assert

	// contracts/campaign/campaign.algo.ts:168
	// assert(this.isApproved())
	callsub isApproved
	assert

	// contracts/campaign/campaign.algo.ts:169
	// assert(this.campaign.value.endTime < globals.latestTimestamp)
	byte 0x63616d706169676e // "campaign"
	app_global_get
	store 0 // full array
	load 0 // full array
	extract 48 8
	btoi
	global LatestTimestamp
	<
	assert

	// contracts/campaign/campaign.algo.ts:170
	// assert(this.purchases(this.txn.sender).exists)
	byte 0x70 // "p"
	txn Sender
	concat
	box_len
	swap
	pop
	assert

	// contracts/campaign/campaign.algo.ts:172
	// amountForClaim = this.purchases(this.txn.sender).value * this.campaign.value.price
	byte 0x70 // "p"
	txn Sender
	concat
	box_get
	assert
	btoi
	byte 0x63616d706169676e // "campaign"
	app_global_get
	store 0 // full array
	load 0 // full array
	extract 0 8
	btoi
	*
	frame_bury -2 // amountForClaim: uint64

	// contracts/campaign/campaign.algo.ts:175
	// sendAssetTransfer({
	//       sender: this.app.address,
	//       assetReceiver: this.txn.sender,
	//       xferAsset: idoAsa,
	//       assetAmount: amountForClaim,
	//     })
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// contracts/campaign/campaign.algo.ts:176
	// sender: this.app.address
	global CurrentApplicationAddress
	itxn_field Sender

	// contracts/campaign/campaign.algo.ts:177
	// assetReceiver: this.txn.sender
	txn Sender
	itxn_field AssetReceiver

	// contracts/campaign/campaign.algo.ts:178
	// xferAsset: idoAsa
	frame_dig -1 // idoAsa: asset
	itxn_field XferAsset

	// contracts/campaign/campaign.algo.ts:179
	// assetAmount: amountForClaim
	frame_dig -2 // amountForClaim: uint64
	itxn_field AssetAmount

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

// withdrawPurchase()void
abi_route_withdrawPurchase:
	// execute withdrawPurchase()void
	callsub withdrawPurchase
	int 1
	return

withdrawPurchase:
	proto 0 0

	// contracts/campaign/campaign.algo.ts:185
	// assert(this.campaign.exists)
	txna Applications 0
	byte 0x63616d706169676e // "campaign"
	app_global_get_ex
	swap
	pop
	assert

	// contracts/campaign/campaign.algo.ts:186
	// assert(!this.isApproved())
	callsub isApproved
	!
	assert

	// contracts/campaign/campaign.algo.ts:187
	// assert(this.campaign.value.startTime > globals.latestTimestamp)
	byte 0x63616d706169676e // "campaign"
	app_global_get
	store 0 // full array
	load 0 // full array
	extract 40 8
	btoi
	global LatestTimestamp
	>
	assert
	retsub

// withdrawIdoAsa()void
abi_route_withdrawIdoAsa:
	// execute withdrawIdoAsa()void
	callsub withdrawIdoAsa
	int 1
	return

withdrawIdoAsa:
	proto 0 0

	// contracts/campaign/campaign.algo.ts:193
	// assert(this.campaign.exists)
	txna Applications 0
	byte 0x63616d706169676e // "campaign"
	app_global_get_ex
	swap
	pop
	assert

	// contracts/campaign/campaign.algo.ts:194
	// verifyTxn(this.txn, { sender: this.admin.value })
	// verify sender
	txn Sender
	byte 0x61646d696e // "admin"
	app_global_get
	==
	assert

	// contracts/campaign/campaign.algo.ts:195
	// assert(this.campaign.value.endTime > globals.latestTimestamp)
	byte 0x63616d706169676e // "campaign"
	app_global_get
	store 0 // full array
	load 0 // full array
	extract 48 8
	btoi
	global LatestTimestamp
	>
	assert
	retsub

// withdrawSales(asset)void
//
// // eslint-disable-next-line no-unused-vars
abi_route_withdrawSales:
	// buyAsa: asset
	txna ApplicationArgs 1
	btoi
	txnas Assets

	// execute withdrawSales(asset)void
	callsub withdrawSales
	int 1
	return

withdrawSales:
	proto 1 0

	// contracts/campaign/campaign.algo.ts:204
	// assert(this.campaign.exists)
	txna Applications 0
	byte 0x63616d706169676e // "campaign"
	app_global_get_ex
	swap
	pop
	assert

	// contracts/campaign/campaign.algo.ts:205
	// verifyTxn(this.txn, { sender: this.admin.value })
	// verify sender
	txn Sender
	byte 0x61646d696e // "admin"
	app_global_get
	==
	assert

	// contracts/campaign/campaign.algo.ts:206
	// assert(this.campaign.value.endTime > globals.latestTimestamp)
	byte 0x63616d706169676e // "campaign"
	app_global_get
	store 0 // full array
	load 0 // full array
	extract 48 8
	btoi
	global LatestTimestamp
	>
	assert
	retsub

// vote(asset,bool)void
//
// // eslint-disable-next-line no-unused-vars
abi_route_vote:
	// votersAsa: asset
	txna ApplicationArgs 2
	btoi
	txnas Assets

	// inFavor: bool
	txna ApplicationArgs 1
	dup
	len
	int 1
	==
	assert
	int 0
	getbit

	// execute vote(asset,bool)void
	callsub vote
	int 1
	return

vote:
	proto 2 0

	// contracts/campaign/campaign.algo.ts:213
	// assert(this.campaign.exists)
	txna Applications 0
	byte 0x63616d706169676e // "campaign"
	app_global_get_ex
	swap
	pop
	assert

	// contracts/campaign/campaign.algo.ts:214
	// assert(this.campaign.value.startTime > globals.latestTimestamp)
	byte 0x63616d706169676e // "campaign"
	app_global_get
	store 0 // full array
	load 0 // full array
	extract 40 8
	btoi
	global LatestTimestamp
	>
	assert

	// contracts/campaign/campaign.algo.ts:215
	// assert(this.txn.sender.assetBalance(this.votersAsaId.value) === 1)
	txn Sender
	byte 0x766f746572734173614964 // "votersAsaId"
	app_global_get
	asset_holding_get AssetBalance
	assert
	int 1
	==
	assert

	// contracts/campaign/campaign.algo.ts:226
	// this.votesTotal.value = this.votesTotal.value + 1
	byte 0x766f746573546f74616c // "votesTotal"
	byte 0x766f746573546f74616c // "votesTotal"
	app_global_get
	int 1
	+
	app_global_put

	// if3_condition
	// contracts/campaign/campaign.algo.ts:227
	// inFavor
	frame_dig -1 // inFavor: bool
	bz if3_end

	// if3_consequent
	// contracts/campaign/campaign.algo.ts:228
	// this.votesInFavor.value = this.votesInFavor.value + 1
	byte 0x766f746573496e4661766f72 // "votesInFavor"
	byte 0x766f746573496e4661766f72 // "votesInFavor"
	app_global_get
	int 1
	+
	app_global_put

if3_end:
	retsub

// getVotes()(uint64,uint64)
abi_route_getVotes:
	// execute getVotes()(uint64,uint64)
	callsub getVotes
	int 1
	return

getVotes:
	proto 0 0

	// contracts/campaign/campaign.algo.ts:233
	// return [this.votesInFavor.value, this.votesTotal.value];
	byte 0x766f746573496e4661766f72 // "votesInFavor"
	app_global_get
	itob
	byte 0x766f746573546f74616c // "votesTotal"
	app_global_get
	itob
	concat
	byte 0x151f7c75
	swap
	concat
	log
	retsub

// getVotersAsa()uint64
abi_route_getVotersAsa:
	// execute getVotersAsa()uint64
	callsub getVotersAsa
	int 1
	return

getVotersAsa:
	proto 0 0

	// contracts/campaign/campaign.algo.ts:237
	// return this.votersAsaId.value;
	byte 0x766f746572734173614964 // "votersAsaId"
	app_global_get
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

// getIdoAsa()uint64
abi_route_getIdoAsa:
	// execute getIdoAsa()uint64
	callsub getIdoAsa
	int 1
	return

getIdoAsa:
	proto 0 0

	// contracts/campaign/campaign.algo.ts:241
	// return this.idoAsaId.value;
	byte 0x69646f4173614964 // "idoAsaId"
	app_global_get
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

// getBuyAsa()uint64
abi_route_getBuyAsa:
	// execute getBuyAsa()uint64
	callsub getBuyAsa
	int 1
	return

getBuyAsa:
	proto 0 0

	// contracts/campaign/campaign.algo.ts:245
	// return this.buyAsaId.value;
	byte 0x6275794173614964 // "buyAsaId"
	app_global_get
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

// getCampaign()(uint64,uint64,uint64,uint64,uint64,uint64,uint64,string)
abi_route_getCampaign:
	// execute getCampaign()(uint64,uint64,uint64,uint64,uint64,uint64,uint64,string)
	callsub getCampaign
	int 1
	return

getCampaign:
	proto 0 0

	// contracts/campaign/campaign.algo.ts:249
	// return this.campaign.value;
	byte 0x63616d706169676e // "campaign"
	app_global_get
	byte 0x151f7c75
	swap
	concat
	log
	retsub

create_NoOp:
	method "createApplication()void"
	txna ApplicationArgs 0
	match abi_route_createApplication
	err

call_NoOp:
	method "createCampaign(account,asset,asset,asset,uint64,uint64,uint64,uint64,uint64,uint64,string)void"
	method "depositIdoAsa(axfer,asset)void"
	method "buy(axfer,asset,uint64)void"
	method "claim(asset)void"
	method "withdrawPurchase()void"
	method "withdrawIdoAsa()void"
	method "withdrawSales(asset)void"
	method "vote(bool,asset)void"
	method "getVotes()(uint64,uint64)"
	method "getVotersAsa()uint64"
	method "getIdoAsa()uint64"
	method "getBuyAsa()uint64"
	method "getCampaign()(uint64,uint64,uint64,uint64,uint64,uint64,uint64,string)"
	txna ApplicationArgs 0
	match abi_route_createCampaign abi_route_depositIdoAsa abi_route_buy abi_route_claim abi_route_withdrawPurchase abi_route_withdrawIdoAsa abi_route_withdrawSales abi_route_vote abi_route_getVotes abi_route_getVotersAsa abi_route_getIdoAsa abi_route_getBuyAsa abi_route_getCampaign
	err

process_static_tuple_element:
	proto 4 3
	frame_dig -4 // tuple head
	frame_dig -1 // element
	concat
	frame_dig -3 // tuple tail
	frame_dig -2 // head offset
	retsub

process_dynamic_tuple_element:
	proto 4 3
	frame_dig -4 // tuple head
	frame_dig -2 // head offset
	concat
	frame_bury -4 // tuple head
	frame_dig -1 // element
	dup
	len
	frame_dig -2 // head offset
	btoi
	+
	itob
	extract 6 2
	frame_bury -2 // head offset
	frame_dig -3 // tuple tail
	swap
	concat
	frame_bury -3 // tuple tail
	frame_dig -4 // tuple head
	frame_dig -3 // tuple tail
	frame_dig -2 // head offset
	retsub